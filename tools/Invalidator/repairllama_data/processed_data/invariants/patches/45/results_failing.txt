Daikon version 5.8.20, released May 14, 2024; http://plse.cs.washington.edu/daikon.
Reading declaration files Processing trace data; reading 1 dtrace file:

No return from procedure observed 88 times.  Unmatched entries are ignored!
Unterminated calls:
  org.apache.commons.lang.text.StrBuilder.insert(int, java.lang.Object) : 4 invocations
  org.apache.commons.lang.text.StrBuilder.insert(int, java.lang.String) : 16 invocations
  org.apache.commons.lang.text.StrBuilder.validateIndex(int) : 24 invocations
  org.apache.commons.lang.text.StrBuilder.append(org.apache.commons.lang.text.StrBuilder, int, int) : 6 invocations
  org.apache.commons.lang.text.StrBuilder.append(char[], int, int) : 6 invocations
  org.apache.commons.lang.text.StrBuilder.append(java.lang.StringBuffer, int, int) : 6 invocations
  org.apache.commons.lang.text.StrBuilder.append(java.lang.String, int, int) : 6 invocations
  org.apache.commons.lang.text.StrBuilder.insert(int, char[]) : 2 invocations
  org.apache.commons.lang.text.StrBuilder.insert(int, char[], int, int) : 6 invocations
  org.apache.commons.lang.text.StrBuilder.insert(int, boolean) : 2 invocations
  org.apache.commons.lang.text.StrBuilder.insert(int, char) : 2 invocations
  org.apache.commons.lang.text.StrBuilder.insert(int, int) : 2 invocations
  org.apache.commons.lang.text.StrBuilder.insert(int, long) : 2 invocations
  org.apache.commons.lang.text.StrBuilder.insert(int, float) : 2 invocations
  org.apache.commons.lang.text.StrBuilder.insert(int, double) : 2 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

===========================================================================
org.apache.commons.lang.text.StrBuilder:::CLASS
===========================================================================
org.apache.commons.lang.text.StrBuilder:::OBJECT
this.buffer != null
this.buffer[] elements >= 0
this.size >= 0
this.newLine.toString == "#"
this.nullText.toString one of { "NULL", "null" }
org.apache.commons.lang.text.StrBuilder.CAPACITY > this.size
org.apache.commons.lang.text.StrBuilder.CAPACITY != size(this.buffer[])-1
this.buffer[] elements < org.apache.commons.lang.text.StrBuilder.serialVersionUID
org.apache.commons.lang.text.StrBuilder.serialVersionUID > this.size
org.apache.commons.lang.text.StrBuilder.serialVersionUID > size(this.buffer[])
this.size <= size(this.buffer[])
===========================================================================
org.apache.commons.lang.text.StrBuilder.StrBuilder():::EXIT
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[])
this.size == this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
this.size == this.buffer[this.size]
this.newLine == this.nullText
this.buffer[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
this.buffer[] elements == 0
this.size == 0
this.newLine == null
this.buffer[] elements == this.size
===========================================================================
org.apache.commons.lang.text.StrBuilder.StrBuilder(int):::ENTER
initialCapacity one of { 1, 32 }
===========================================================================
org.apache.commons.lang.text.StrBuilder.StrBuilder(int):::EXIT
this.size == this.buffer[this.size]
this.size == this.buffer[orig(initialCapacity)-1]
this.newLine == this.nullText
orig(initialCapacity) == size(this.buffer[])
this.buffer[] elements == 0
this.buffer[] one of { [0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
this.size == 0
this.newLine == null
org.apache.commons.lang.text.StrBuilder.CAPACITY >= orig(initialCapacity)
org.apache.commons.lang.text.StrBuilder.serialVersionUID > orig(initialCapacity)
this.buffer[] elements == this.size
this.size <= size(this.buffer[])-1
===========================================================================
org.apache.commons.lang.text.StrBuilder.StrBuilder(java.lang.String):::ENTER
str != null
===========================================================================
org.apache.commons.lang.text.StrBuilder.StrBuilder(java.lang.String):::EXIT
this.newLine == this.nullText
str.toString == orig(str.toString)
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == this.buffer[this.size]
this.size one of { 0, 3, 9 }
this.newLine == null
size(this.buffer[]) one of { 32, 35, 41 }
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == 0
org.apache.commons.lang.text.StrBuilder.CAPACITY <= size(this.buffer[])
this.buffer[] elements >= this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
this.size < size(this.buffer[])-1
this.size >= this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
size(this.buffer[])-1 > this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
===========================================================================
org.apache.commons.lang.text.StrBuilder.append(boolean):::ENTER
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[])
this.newLine == this.nullText
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == this.buffer[this.size]
this has only one value
this.buffer has only one value
this.buffer[] one of { [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [116, 114, 117, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
this.size one of { 0, 4 }
this.newLine == null
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == 0
===========================================================================
org.apache.commons.lang.text.StrBuilder.append(boolean):::EXIT
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[])
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(return.buffer[])
this.buffer == return.buffer
this.buffer == orig(this.buffer)
this.buffer[] == return.buffer[]
this.size == return.size
this.newLine == this.nullText
this.newLine == return.newLine
this.newLine == return.nullText
this.newLine == orig(this.newLine)
this.newLine == orig(this.nullText)
return == orig(this)
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[post(org.apache.commons.lang.text.StrBuilder.CAPACITY)-1])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == this.buffer[this.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == this.buffer[return.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == return.buffer[this.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[post(this.size)])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[post(this.size)-1])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == return.buffer[return.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[post(return.size)])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[post(return.size)-1])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[this.size])
this.buffer has only one value
this.buffer[] one of { [116, 114, 117, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [116, 114, 117, 101, 102, 97, 108, 115, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
this.size one of { 4, 9 }
this.newLine == null
return has only one value
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == 0
this.buffer[this.size-1] == 101
this.buffer[orig(this.size)] one of { 102, 116 }
===========================================================================
org.apache.commons.lang.text.StrBuilder.append(char):::ENTER
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[])
this.newLine == this.nullText
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == this.buffer[this.size]
this has only one value
this.buffer has only one value
this.buffer[] == [116, 114, 117, 101, 102, 97, 108, 115, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
this.size == 9
this.newLine == null
ch == 33
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == 0
this.buffer[this.size-1] == 101
===========================================================================
org.apache.commons.lang.text.StrBuilder.append(char):::EXIT
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[])
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(return.buffer[])
this.buffer == return.buffer
this.buffer == orig(this.buffer)
this.buffer[] == return.buffer[]
this.size == return.size
this.newLine == this.nullText
this.newLine == return.newLine
this.newLine == return.nullText
this.newLine == orig(this.newLine)
this.newLine == orig(this.nullText)
return == orig(this)
orig(ch) == this.buffer[this.size-1]
orig(ch) == this.buffer[return.size-1]
orig(ch) == this.buffer[orig(this.size)]
orig(ch) == return.buffer[this.size-1]
orig(ch) == return.buffer[return.size-1]
orig(ch) == return.buffer[orig(this.size)]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[post(org.apache.commons.lang.text.StrBuilder.CAPACITY)-1])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == this.buffer[this.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == this.buffer[return.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == return.buffer[this.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[post(this.size)])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[post(this.size)-1])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == return.buffer[return.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[post(return.size)])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[post(return.size)-1])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[this.size])
this.buffer[orig(this.size)-1] == orig(this.buffer[this.size-1])
this.buffer has only one value
this.buffer[] == [116, 114, 117, 101, 102, 97, 108, 115, 101, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
this.size == 10
this.newLine == null
return has only one value
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == 0
this.buffer[orig(this.size)-1] == 101
===========================================================================
org.apache.commons.lang.text.StrBuilder.append(char[]):::ENTER
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[])
this.size == this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
this.size == this.buffer[this.size]
this.buffer[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
this.buffer[] elements == 0
this.size == 0
this.newLine == null
this.nullText.toString == "NULL"
chars[] elements one of { 102, 111 }
chars[] one of { [], [102, 111, 111] }
size(chars[]) one of { 0, 3 }
this.buffer[] elements == this.size
===========================================================================
org.apache.commons.lang.text.StrBuilder.append(char[]):::EXIT617
orig(this.size) == orig(this.buffer[post(this.size)-1])
orig(this.size) == orig(this.buffer[post(return.size)-1])
this.buffer has only one value
this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
this.size == 4
this.nullText has only one value
return has only one value
orig(this) has only one value
orig(chars) == null
this.buffer[this.size-1] == 76
this.buffer[orig(this.size)] == 78
===========================================================================
org.apache.commons.lang.text.StrBuilder.append(char[]):::EXIT626
this.newLine == this.nullText
this.newLine == return.nullText
this.newLine == orig(this.nullText)
this.buffer has only one value
this.buffer[] elements one of { 0, 102, 111 }
this.buffer[] one of { [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
this.size one of { 0, 3 }
return has only one value
orig(this) has only one value
this.buffer[orig(this.size)] one of { 0, 102 }
===========================================================================
org.apache.commons.lang.text.StrBuilder.append(char[]):::EXIT
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[])
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(return.buffer[])
this.buffer == return.buffer
this.buffer == orig(this.buffer)
this.buffer[] == return.buffer[]
this.size == return.size
this.size == orig(size(chars[]))
this.newLine == return.newLine
this.newLine == orig(this.newLine)
this.nullText == return.nullText
this.nullText == orig(this.nullText)
chars[] == orig(chars[])
return == orig(this)
orig(this.size) == this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
orig(this.size) == return.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
orig(this.size) == this.buffer[this.size]
orig(this.size) == this.buffer[return.size]
orig(this.size) == return.buffer[this.size]
orig(this.size) == orig(this.buffer[post(this.size)])
orig(this.size) == return.buffer[return.size]
orig(this.size) == orig(this.buffer[post(return.size)])
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  <==>  (orig(chars) == null)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  <==>  (this.buffer[orig(this.size)] == 78)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  <==>  (this.nullText has only one value)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  <==>  (this.size == 4)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(this.buffer[]) elements == orig(this.buffer[post(return.size)-1]))
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(this.buffer[]) elements == orig(this.buffer[post(this.size)-1]))
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(this.buffer[post(return.size)-1]) == 0)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(this.buffer[post(this.size)-1]) == 0)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(this.size) == orig(this.buffer[post(return.size)-1]))
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(this.size) == orig(this.buffer[post(this.size)-1]))
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (return.buffer[return.size-1] == 76)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (return.buffer[this.size-1] == 76)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (this.buffer[return.size-1] == 76)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (this.buffer[this.size-1] == 76)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (this.nullText.toString == "NULL")
(this.buffer[] one of { [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  <==>  (this.buffer[orig(this.size)] one of { 0, 102 })
(this.buffer[] one of { [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  <==>  (this.nullText == null)
(this.buffer[] one of { [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  <==>  (this.size one of { 0, 3 })
(this.buffer[] one of { [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (chars[] elements one of { 102, 111 })
(this.buffer[] one of { [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (chars[] one of { [], [102, 111, 111] })
(this.buffer[] one of { [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (orig(size(chars[])) one of { 0, 3 })
(this.buffer[] one of { [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (this.buffer[] elements one of { 0, 102, 111 })
(this.buffer[] one of { [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (this.newLine == this.nullText)
(this.buffer[] one of { [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (this.size == orig(size(chars[])))
this.buffer[] one of { [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
this.size one of { 0, 3, 4 }
this.newLine == null
this.nullText.toString == "NULL"
chars[] elements one of { 102, 111 }
chars[] one of { [], [102, 111, 111] }
this.buffer[orig(this.size)] one of { 0, 78, 102 }
===========================================================================
org.apache.commons.lang.text.StrBuilder.append(char[], int, int):::ENTER
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[])
this.size == startIndex
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == this.buffer[this.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == this.buffer[startIndex]
this.buffer[] elements one of { 0, 102, 111 }
this.buffer[] one of { [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
this.size one of { 0, 3 }
this.newLine == null
this.nullText.toString == "NULL"
chars[] one of { [97, 98, 99, 98, 97, 114, 100, 101, 102], [98, 97, 114], [102, 111, 111] }
length one of { 0, 1, 3 }
size(chars[]) one of { 3, 9 }
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == 0
this.buffer[length] one of { 0, 102 }
===========================================================================
org.apache.commons.lang.text.StrBuilder.append(char[], int, int):::EXIT640
orig(startIndex) == this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
orig(startIndex) == return.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
orig(startIndex) == orig(this.buffer[post(org.apache.commons.lang.text.StrBuilder.CAPACITY)-1])
orig(startIndex) == this.buffer[this.size]
orig(startIndex) == this.buffer[return.size]
orig(startIndex) == return.buffer[this.size]
orig(startIndex) == orig(this.buffer[post(this.size)])
orig(startIndex) == orig(this.buffer[post(this.size)-1])
orig(startIndex) == orig(this.buffer[post(startIndex)])
orig(startIndex) == orig(this.buffer[post(length)])
orig(startIndex) == orig(this.buffer[post(length)-1])
orig(startIndex) == return.buffer[return.size]
orig(startIndex) == orig(this.buffer[post(return.size)])
orig(startIndex) == orig(this.buffer[post(return.size)-1])
orig(startIndex) == orig(this.buffer[this.size])
orig(startIndex) == orig(this.buffer[startIndex])
orig(startIndex) == orig(this.buffer[length])
orig(startIndex) == orig(this.buffer[length-1])
this.buffer[orig(startIndex)] == this.buffer[orig(length)-1]
this.buffer[orig(startIndex)] == return.buffer[orig(length)-1]
this.buffer has only one value
this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
this.size == 4
this.nullText has only one value
return has only one value
orig(this) has only one value
orig(this.buffer[]) == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
orig(this.buffer[]) elements == 0
orig(chars) == null
orig(startIndex) == 0
orig(length) == 1
this.buffer[this.size-1] == 76
this.buffer[orig(startIndex)] == 78
this.buffer[orig(length)] == 85
orig(this.buffer[]) elements == orig(startIndex)
===========================================================================
org.apache.commons.lang.text.StrBuilder.append(char[], int, int):::EXIT654
this.newLine == this.nullText
this.newLine == return.nullText
this.newLine == orig(this.nullText)
this.buffer has only one value
this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
this.size one of { 3, 6 }
return has only one value
orig(this) has only one value
orig(length) one of { 0, 3 }
this.buffer[this.size-1] one of { 111, 114 }
this.buffer[orig(startIndex)] one of { 0, 98, 102 }
this.buffer[orig(length)] one of { 0, 98, 102 }
===========================================================================
org.apache.commons.lang.text.StrBuilder.append(char[], int, int):::EXIT
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[])
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(return.buffer[])
this.buffer == return.buffer
this.buffer == orig(this.buffer)
this.buffer[] == return.buffer[]
this.size == return.size
this.newLine == return.newLine
this.newLine == orig(this.newLine)
this.nullText == return.nullText
this.nullText == orig(this.nullText)
chars[] == orig(chars[])
return == orig(this)
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[post(org.apache.commons.lang.text.StrBuilder.CAPACITY)-1])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == this.buffer[this.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == this.buffer[return.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == return.buffer[this.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[post(this.size)])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[post(startIndex)])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == return.buffer[return.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[post(return.size)])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[this.size])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[startIndex])
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  <==>  (orig(chars) == null)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  <==>  (orig(length) == 1)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  <==>  (this.buffer[orig(length)] == 85)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  <==>  (this.buffer[orig(startIndex)] == 78)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  <==>  (this.buffer[this.size-1] == 76)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  <==>  (this.nullText has only one value)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  <==>  (this.size == 4)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(startIndex) == 0)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(startIndex) == orig(this.buffer[length-1]))
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(startIndex) == orig(this.buffer[length]))
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(startIndex) == orig(this.buffer[post(length)-1]))
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(startIndex) == orig(this.buffer[post(this.size)-1]))
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(startIndex) == this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1])
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(this.buffer[]) == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(this.buffer[]) elements == 0)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(this.buffer[]) elements == orig(startIndex))
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(this.buffer[]) elements == orig(this.buffer[length-1]))
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(this.buffer[]) elements == orig(this.buffer[length]))
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(this.buffer[]) elements == orig(this.buffer[post(length)-1]))
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(this.buffer[]) elements == orig(this.buffer[post(this.size)-1]))
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(this.buffer[]) elements == this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1])
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(this.buffer[length-1]) == 0)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(this.buffer[length]) == 0)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(this.buffer[post(length)-1]) == 0)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(this.buffer[post(this.size)-1]) == 0)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (return.buffer[length-1] == 78)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (return.buffer[orig(length)-1] == 78)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (this.buffer[length-1] == 78)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (this.buffer[length-1] == this.buffer[orig(startIndex)])
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (this.buffer[orig(length)-1] == 78)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (this.buffer[orig(startIndex)] == return.buffer[length-1])
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (this.buffer[orig(startIndex)] == return.buffer[orig(length)-1])
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (this.buffer[orig(startIndex)] == this.buffer[orig(length)-1])
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (this.nullText.toString == "NULL")
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  <==>  (orig(length) one of { 0, 3 })
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  <==>  (this.buffer[orig(length)] one of { 0, 98, 102 })
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  <==>  (this.buffer[orig(startIndex)] one of { 0, 98, 102 })
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  <==>  (this.buffer[this.size-1] one of { 111, 114 })
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  <==>  (this.nullText == null)
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  <==>  (this.size one of { 3, 6 })
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (chars[] one of { [97, 98, 99, 98, 97, 114, 100, 101, 102], [98, 97, 114], [102, 111, 111] })
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (chars[this.size-1] one of { 111, 114 })
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (orig(size(chars[])) one of { 3, 9 })
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (orig(startIndex) one of { 0, 3 })
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (orig(this.buffer[]) elements one of { 0, 102, 111 })
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (orig(this.buffer[]) one of { [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (orig(this.buffer[length]) one of { 0, 102 })
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (orig(this.buffer[post(this.size)-1]) one of { 0, 111 })
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (this.newLine == this.nullText)
this.buffer[] one of { [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
this.size one of { 3, 4, 6 }
this.newLine == null
this.nullText.toString == "NULL"
chars[] one of { [97, 98, 99, 98, 97, 114, 100, 101, 102], [98, 97, 114], [102, 111, 111] }
orig(startIndex) one of { 0, 3 }
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == 0
this.buffer[this.size-1] one of { 76, 111, 114 }
chars[this.size-1] one of { 111, 114 }
orig(this.buffer[post(this.size)-1]) one of { 0, 111 }
orig(this.buffer[post(this.size)-1]) in this.buffer[]
orig(this.buffer[length]) in this.buffer[]
===========================================================================
org.apache.commons.lang.text.StrBuilder.append(double):::ENTER
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[])
this.newLine == this.nullText
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == this.buffer[this.size]
this has only one value
this.buffer has only one value
this.buffer[] == [48, 49, 50, 46, 51, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
this.size == 5
this.newLine == null
value == 4.5
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == 0
this.buffer[this.size-1] == 51
===========================================================================
org.apache.commons.lang.text.StrBuilder.append(double):::EXIT
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[])
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(return.buffer[])
this.buffer == return.buffer
this.buffer == orig(this.buffer)
this.buffer[] == return.buffer[]
this.size == return.size
this.newLine == this.nullText
this.newLine == return.newLine
this.newLine == return.nullText
this.newLine == orig(this.newLine)
this.newLine == orig(this.nullText)
return == orig(this)
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[post(org.apache.commons.lang.text.StrBuilder.CAPACITY)-1])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == this.buffer[this.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == this.buffer[return.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == return.buffer[this.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[post(this.size)])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[post(this.size)-1])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == return.buffer[return.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[post(return.size)])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[post(return.size)-1])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[this.size])
this.buffer[orig(this.size)-1] == orig(this.buffer[this.size-1])
this.buffer has only one value
this.buffer[] == [48, 49, 50, 46, 51, 52, 46, 53, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
this.size == 8
this.newLine == null
return has only one value
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == 0
this.buffer[this.size-1] == 53
this.buffer[orig(this.size)] == 52
this.buffer[orig(this.size)-1] == 51
===========================================================================
org.apache.commons.lang.text.StrBuilder.append(float):::ENTER
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[])
this.newLine == this.nullText
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == this.buffer[this.size]
this has only one value
this.buffer has only one value
this.buffer[] == [48, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
this.buffer[] elements one of { 0, 48, 49 }
this.size == 2
this.newLine == null
value == 2.3
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == 0
this.buffer[this.size-1] == 49
===========================================================================
org.apache.commons.lang.text.StrBuilder.append(float):::EXIT
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[])
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(return.buffer[])
this.buffer == return.buffer
this.buffer == orig(this.buffer)
this.buffer[] == return.buffer[]
this.size == return.size
this.newLine == this.nullText
this.newLine == return.newLine
this.newLine == return.nullText
this.newLine == orig(this.newLine)
this.newLine == orig(this.nullText)
return == orig(this)
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[post(org.apache.commons.lang.text.StrBuilder.CAPACITY)-1])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == this.buffer[this.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == this.buffer[return.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == return.buffer[this.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[post(this.size)])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[post(this.size)-1])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == return.buffer[return.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[post(return.size)])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[post(return.size)-1])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[this.size])
this.buffer[orig(this.size)-1] == orig(this.buffer[this.size-1])
this.buffer has only one value
this.buffer[] == [48, 49, 50, 46, 51, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
this.size == 5
this.newLine == null
return has only one value
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == 0
this.buffer[this.size-1] == 51
this.buffer[orig(this.size)] == 50
this.buffer[orig(this.size)-1] == 49
===========================================================================
org.apache.commons.lang.text.StrBuilder.append(int):::ENTER
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[])
this.size == value
this.size == this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
this.size == this.buffer[this.size]
this.size == this.buffer[value]
this.newLine == this.nullText
this has only one value
this.buffer has only one value
this.buffer[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
this.buffer[] elements == 0
this.size == 0
this.newLine == null
this.buffer[] elements == this.size
===========================================================================
org.apache.commons.lang.text.StrBuilder.append(int):::EXIT
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[])
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(return.buffer[])
this.buffer == return.buffer
this.buffer == orig(this.buffer)
this.buffer[] == return.buffer[]
this.size == return.size
this.newLine == this.nullText
this.newLine == return.newLine
this.newLine == return.nullText
this.newLine == orig(this.newLine)
this.newLine == orig(this.nullText)
return == orig(this)
orig(value) == this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
orig(value) == return.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
orig(value) == orig(this.buffer[post(org.apache.commons.lang.text.StrBuilder.CAPACITY)-1])
orig(value) == this.buffer[this.size]
orig(value) == this.buffer[return.size]
orig(value) == return.buffer[this.size]
orig(value) == orig(this.buffer[post(this.size)])
orig(value) == orig(this.buffer[post(this.size)-1])
orig(value) == orig(this.buffer[post(value)])
orig(value) == return.buffer[return.size]
orig(value) == orig(this.buffer[post(return.size)])
orig(value) == orig(this.buffer[post(return.size)-1])
orig(value) == orig(this.buffer[this.size])
orig(value) == orig(this.buffer[value])
this.buffer[this.size-1] == this.buffer[orig(value)]
this.buffer[return.size-1] == this.buffer[orig(value)]
this.buffer[orig(value)] == return.buffer[this.size-1]
this.buffer[orig(value)] == return.buffer[return.size-1]
this.buffer has only one value
this.buffer[] == [48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
this.buffer[] elements one of { 0, 48 }
this.size == 1
this.newLine == null
return has only one value
orig(value) == 0
this.buffer[orig(value)] == 48
orig(this.buffer[]) elements == orig(value)
===========================================================================
org.apache.commons.lang.text.StrBuilder.append(java.lang.Object):::ENTER
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[])
this.newLine == null
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == 0
org.apache.commons.lang.text.StrBuilder.CAPACITY != this.buffer[this.size]
org.apache.commons.lang.text.StrBuilder.serialVersionUID > this.buffer[this.size]
this.buffer[] elements >= this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
this.size < size(this.buffer[])-1
this.size >= this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
size(this.buffer[])-1 != this.buffer[this.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] <= this.buffer[this.size]
===========================================================================
org.apache.commons.lang.text.StrBuilder.append(java.lang.Object):::EXIT456
this.newLine == orig(obj)
this.size one of { 0, 4, 8 }
orig(this.size) one of { 0, 4 }
orig(obj) == null
this.buffer[this.size] one of { 0, 44, 97 }
orig(this.buffer[this.size]) one of { 0, 97, 110 }
this.buffer[] >= orig(this.buffer[]) (elementwise)
orig(this.buffer[this.size]) in this.buffer[]
this.buffer[this.size] <= this.buffer[orig(this.size)]
this.buffer[this.size] <= orig(this.buffer[this.size])
===========================================================================
org.apache.commons.lang.text.StrBuilder.append(java.lang.Object):::EXIT458
orig(obj) != null
this.buffer[this.size-1] one of { 111, 114, 122 }
this.buffer[orig(this.size)] one of { 98, 102 }
org.apache.commons.lang.text.StrBuilder.CAPACITY < this.buffer[this.size-1]
org.apache.commons.lang.text.StrBuilder.CAPACITY < this.buffer[orig(this.size)]
org.apache.commons.lang.text.StrBuilder.CAPACITY != orig(this.buffer[post(this.size)-1])
org.apache.commons.lang.text.StrBuilder.serialVersionUID > this.buffer[this.size-1]
org.apache.commons.lang.text.StrBuilder.serialVersionUID > orig(this.buffer[post(this.size)-1])
orig(this.buffer[post(this.size)-1]) in this.buffer[]
this.size - orig(this.size) - 3 == 0
this.size > this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
this.size != this.buffer[this.size]
this.size < this.buffer[this.size-1]
this.size < this.buffer[orig(this.size)]
this.size != orig(this.buffer[post(this.size)-1])
this.size != orig(this.buffer[this.size])
orig(this.size) < this.buffer[this.size-1]
orig(this.size) < this.buffer[orig(this.size)]
size(this.buffer[])-1 != orig(this.buffer[post(this.size)-1])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] < this.buffer[this.size-1]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] < this.buffer[orig(this.size)]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] <= orig(this.buffer[post(this.size)-1])
this.buffer[this.size] <= this.buffer[this.size-1]
this.buffer[this.size] != this.buffer[orig(this.size)]
this.buffer[this.size-1] > this.buffer[orig(this.size)]
this.buffer[this.size-1] >= orig(this.buffer[post(this.size)-1])
this.buffer[this.size-1] > orig(this.buffer[this.size])
===========================================================================
org.apache.commons.lang.text.StrBuilder.append(java.lang.Object):::EXIT
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[])
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(return.buffer[])
this.buffer == return.buffer
this.buffer == orig(this.buffer)
this.buffer[] == return.buffer[]
this.size == return.size
this.newLine == return.newLine
this.newLine == orig(this.newLine)
this.nullText == return.nullText
this.nullText == orig(this.nullText)
this.nullText.toString == return.nullText.toString
this.nullText.toString == orig(this.nullText.toString)
return == orig(this)
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[post(org.apache.commons.lang.text.StrBuilder.CAPACITY)-1])
this.buffer[this.size] == orig(this.buffer[post(this.size)])
this.buffer[this.size] == orig(this.buffer[post(return.size)])
(orig(obj) != null)  ==>  (org.apache.commons.lang.text.StrBuilder.CAPACITY != orig(this.buffer[post(return.size)-1]))
(orig(obj) != null)  ==>  (org.apache.commons.lang.text.StrBuilder.CAPACITY != orig(this.buffer[post(this.size)-1]))
(orig(obj) != null)  ==>  (org.apache.commons.lang.text.StrBuilder.CAPACITY < return.buffer[return.size-1])
(orig(obj) != null)  ==>  (org.apache.commons.lang.text.StrBuilder.CAPACITY < return.buffer[this.size-1])
(orig(obj) != null)  ==>  (org.apache.commons.lang.text.StrBuilder.CAPACITY < this.buffer[orig(this.size)])
(orig(obj) != null)  ==>  (org.apache.commons.lang.text.StrBuilder.CAPACITY < this.buffer[return.size-1])
(orig(obj) != null)  ==>  (org.apache.commons.lang.text.StrBuilder.CAPACITY < this.buffer[this.size-1])
(orig(obj) != null)  ==>  (org.apache.commons.lang.text.StrBuilder.serialVersionUID > orig(this.buffer[post(return.size)-1]))
(orig(obj) != null)  ==>  (org.apache.commons.lang.text.StrBuilder.serialVersionUID > orig(this.buffer[post(this.size)-1]))
(orig(obj) != null)  ==>  (org.apache.commons.lang.text.StrBuilder.serialVersionUID > return.buffer[return.size-1])
(orig(obj) != null)  ==>  (org.apache.commons.lang.text.StrBuilder.serialVersionUID > return.buffer[this.size-1])
(orig(obj) != null)  ==>  (org.apache.commons.lang.text.StrBuilder.serialVersionUID > this.buffer[return.size-1])
(orig(obj) != null)  ==>  (org.apache.commons.lang.text.StrBuilder.serialVersionUID > this.buffer[this.size-1])
(orig(obj) != null)  ==>  (orig(this.buffer[post(return.size)-1]) in this.buffer[])
(orig(obj) != null)  ==>  (orig(this.buffer[post(this.size)-1]) <= return.buffer[return.size-1])
(orig(obj) != null)  ==>  (orig(this.buffer[post(this.size)-1]) in this.buffer[])
(orig(obj) != null)  ==>  (orig(this.size) < return.buffer[return.size-1])
(orig(obj) != null)  ==>  (orig(this.size) < return.buffer[this.size-1])
(orig(obj) != null)  ==>  (orig(this.size) < this.buffer[orig(this.size)])
(orig(obj) != null)  ==>  (orig(this.size) < this.buffer[return.size-1])
(orig(obj) != null)  ==>  (orig(this.size) < this.buffer[this.size-1])
(orig(obj) != null)  ==>  (return.buffer[return.size-1] > orig(this.buffer[this.size]))
(orig(obj) != null)  ==>  (return.buffer[return.size-1] >= orig(this.buffer[post(return.size)-1]))
(orig(obj) != null)  ==>  (return.buffer[return.size-1] one of { 111, 114, 122 })
(orig(obj) != null)  ==>  (return.buffer[this.size-1] > orig(this.buffer[this.size]))
(orig(obj) != null)  ==>  (return.buffer[this.size-1] >= orig(this.buffer[post(return.size)-1]))
(orig(obj) != null)  ==>  (return.buffer[this.size-1] >= orig(this.buffer[post(this.size)-1]))
(orig(obj) != null)  ==>  (return.buffer[this.size-1] one of { 111, 114, 122 })
(orig(obj) != null)  ==>  (size(this.buffer[])-1 != orig(this.buffer[post(return.size)-1]))
(orig(obj) != null)  ==>  (size(this.buffer[])-1 != orig(this.buffer[post(this.size)-1]))
(orig(obj) != null)  ==>  (this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] < return.buffer[return.size-1])
(orig(obj) != null)  ==>  (this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] < return.buffer[this.size-1])
(orig(obj) != null)  ==>  (this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] < this.buffer[orig(this.size)])
(orig(obj) != null)  ==>  (this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] < this.buffer[return.size-1])
(orig(obj) != null)  ==>  (this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] < this.buffer[this.size-1])
(orig(obj) != null)  ==>  (this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] <= orig(this.buffer[post(return.size)-1]))
(orig(obj) != null)  ==>  (this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] <= orig(this.buffer[post(this.size)-1]))
(orig(obj) != null)  ==>  (this.buffer[orig(this.size)] < return.buffer[return.size-1])
(orig(obj) != null)  ==>  (this.buffer[orig(this.size)] < return.buffer[this.size-1])
(orig(obj) != null)  ==>  (this.buffer[orig(this.size)] one of { 98, 102 })
(orig(obj) != null)  ==>  (this.buffer[return.size-1] > orig(this.buffer[this.size]))
(orig(obj) != null)  ==>  (this.buffer[return.size-1] > this.buffer[orig(this.size)])
(orig(obj) != null)  ==>  (this.buffer[return.size-1] >= orig(this.buffer[post(return.size)-1]))
(orig(obj) != null)  ==>  (this.buffer[return.size-1] >= orig(this.buffer[post(this.size)-1]))
(orig(obj) != null)  ==>  (this.buffer[return.size-1] one of { 111, 114, 122 })
(orig(obj) != null)  ==>  (this.buffer[this.size-1] > orig(this.buffer[this.size]))
(orig(obj) != null)  ==>  (this.buffer[this.size-1] > this.buffer[orig(this.size)])
(orig(obj) != null)  ==>  (this.buffer[this.size-1] >= orig(this.buffer[post(return.size)-1]))
(orig(obj) != null)  ==>  (this.buffer[this.size-1] >= orig(this.buffer[post(this.size)-1]))
(orig(obj) != null)  ==>  (this.buffer[this.size-1] one of { 111, 114, 122 })
(orig(obj) != null)  ==>  (this.buffer[this.size] != this.buffer[orig(this.size)])
(orig(obj) != null)  ==>  (this.buffer[this.size] <= return.buffer[return.size-1])
(orig(obj) != null)  ==>  (this.buffer[this.size] <= return.buffer[this.size-1])
(orig(obj) != null)  ==>  (this.buffer[this.size] <= this.buffer[return.size-1])
(orig(obj) != null)  ==>  (this.buffer[this.size] <= this.buffer[this.size-1])
(orig(obj) != null)  ==>  (this.size != orig(this.buffer[post(return.size)-1]))
(orig(obj) != null)  ==>  (this.size != orig(this.buffer[post(this.size)-1]))
(orig(obj) != null)  ==>  (this.size != orig(this.buffer[this.size]))
(orig(obj) != null)  ==>  (this.size != this.buffer[this.size])
(orig(obj) != null)  ==>  (this.size - orig(this.size) - 3 == 0)
(orig(obj) != null)  ==>  (this.size < return.buffer[return.size-1])
(orig(obj) != null)  ==>  (this.size < return.buffer[this.size-1])
(orig(obj) != null)  ==>  (this.size < this.buffer[orig(this.size)])
(orig(obj) != null)  ==>  (this.size < this.buffer[return.size-1])
(orig(obj) != null)  ==>  (this.size < this.buffer[this.size-1])
(orig(obj) != null)  ==>  (this.size > this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1])
(orig(obj) == null)  ==>  (orig(this.buffer[this.size]) in this.buffer[])
(orig(obj) == null)  ==>  (orig(this.buffer[this.size]) one of { 0, 97, 110 })
(orig(obj) == null)  ==>  (orig(this.size) one of { 0, 4 })
(orig(obj) == null)  ==>  (this.buffer[] >= orig(this.buffer[]) (elementwise))
(orig(obj) == null)  ==>  (this.buffer[this.size] <= orig(this.buffer[this.size]))
(orig(obj) == null)  ==>  (this.buffer[this.size] <= this.buffer[orig(this.size)])
(orig(obj) == null)  ==>  (this.buffer[this.size] one of { 0, 44, 97 })
(orig(obj) == null)  ==>  (this.newLine == orig(obj))
(orig(obj) == null)  ==>  (this.size one of { 0, 4, 8 })
this.newLine == null
return != null
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == 0
org.apache.commons.lang.text.StrBuilder.CAPACITY != this.buffer[this.size]
org.apache.commons.lang.text.StrBuilder.CAPACITY != this.buffer[orig(this.size)]
org.apache.commons.lang.text.StrBuilder.serialVersionUID > this.buffer[this.size]
org.apache.commons.lang.text.StrBuilder.serialVersionUID > this.buffer[orig(this.size)]
this.buffer[] elements >= this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
this.size >= orig(this.size)
this.size < size(this.buffer[])-1
this.size >= this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
this.size <= this.buffer[orig(this.size)]
orig(this.buffer[]) elements >= this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
orig(this.size) < size(this.buffer[])-1
orig(this.size) >= this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
orig(this.size) <= this.buffer[orig(this.size)]
size(this.buffer[])-1 != this.buffer[this.size]
size(this.buffer[])-1 != this.buffer[orig(this.size)]
size(this.buffer[])-1 != orig(this.buffer[this.size])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] <= this.buffer[this.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] <= this.buffer[orig(this.size)]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] <= orig(this.buffer[this.size])
===========================================================================
org.apache.commons.lang.text.StrBuilder.append(java.lang.String):::ENTER
this.newLine.toString == str.toString
size(this.buffer[]) one of { 32, 35, 41 }
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == 0
org.apache.commons.lang.text.StrBuilder.CAPACITY <= size(this.buffer[])
org.apache.commons.lang.text.StrBuilder.CAPACITY != this.buffer[this.size]
org.apache.commons.lang.text.StrBuilder.serialVersionUID > this.buffer[this.size]
this.buffer[] elements >= this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
this.size < size(this.buffer[])-1
this.size >= this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
size(this.buffer[]) != this.buffer[this.size]
size(this.buffer[])-1 > this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
size(this.buffer[])-1 != this.buffer[this.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] <= this.buffer[this.size]
===========================================================================
org.apache.commons.lang.text.StrBuilder.append(java.lang.String):::EXIT470
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[])
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(return.buffer[])
org.apache.commons.lang.text.StrBuilder.CAPACITY == orig(size(this.buffer[]))
this.newLine == orig(str)
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == this.buffer[this.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == this.buffer[return.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == return.buffer[this.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[post(this.size)])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[post(this.size)-1])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == return.buffer[return.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[post(return.size)])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[post(return.size)-1])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[this.size])
this.buffer[] one of { [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [78, 85, 76, 76, 78, 85, 76, 76, 102, 111, 111, 78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
this.size one of { 4, 15 }
this.newLine == null
this.nullText has only one value
this.nullText.toString == "NULL"
orig(this.buffer[]) one of { [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [78, 85, 76, 76, 78, 85, 76, 76, 102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
orig(this.size) one of { 0, 11 }
this.buffer[this.size-1] == 76
this.buffer[orig(this.size)] == 78
===========================================================================
org.apache.commons.lang.text.StrBuilder.append(java.lang.String):::EXIT479
orig(str) != null
===========================================================================
org.apache.commons.lang.text.StrBuilder.append(java.lang.String):::EXIT
this.buffer == return.buffer
this.buffer == orig(this.buffer)
this.buffer[] == return.buffer[]
this.size == return.size
this.newLine == return.newLine
this.newLine == orig(this.newLine)
this.newLine.toString == str.toString
this.newLine.toString == return.newLine.toString
this.newLine.toString == orig(this.newLine.toString)
this.nullText == return.nullText
this.nullText == orig(this.nullText)
this.nullText.toString == return.nullText.toString
this.nullText.toString == orig(this.nullText.toString)
str.toString == orig(str.toString)
return == orig(this)
size(this.buffer[]) == orig(size(this.buffer[]))
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[post(org.apache.commons.lang.text.StrBuilder.CAPACITY)-1])
this.buffer[this.size] == orig(this.buffer[post(this.size)])
this.buffer[this.size] == orig(this.buffer[post(return.size)])
(orig(str) != null)  ==>  (size(this.buffer[]) one of { 32, 35, 41 })
(orig(str) != null)  ==>  (this.newLine.toString == "#")
(orig(str) != null)  ==>  (this.newLine.toString == str.toString)
(orig(str) != null)  ==>  (this.nullText.toString one of { "NULL", "null" })
(orig(str) == null)  ==>  (org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[]))
(orig(str) == null)  ==>  (orig(this.buffer[]) one of { [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [78, 85, 76, 76, 78, 85, 76, 76, 102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })
(orig(str) == null)  ==>  (orig(this.buffer[post(return.size)-1]) == 0)
(orig(str) == null)  ==>  (orig(this.buffer[post(this.size)-1]) == 0)
(orig(str) == null)  ==>  (orig(this.buffer[this.size]) == 0)
(orig(str) == null)  ==>  (orig(this.size) one of { 0, 11 })
(orig(str) == null)  ==>  (return.buffer[return.size-1] == 76)
(orig(str) == null)  ==>  (return.buffer[this.size-1] == 76)
(orig(str) == null)  ==>  (this.buffer[] one of { [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [78, 85, 76, 76, 78, 85, 76, 76, 102, 111, 111, 78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })
(orig(str) == null)  ==>  (this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[post(return.size)-1]))
(orig(str) == null)  ==>  (this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[post(this.size)-1]))
(orig(str) == null)  ==>  (this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[this.size]))
(orig(str) == null)  ==>  (this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == this.buffer[this.size])
(orig(str) == null)  ==>  (this.buffer[orig(this.size)] == 78)
(orig(str) == null)  ==>  (this.buffer[return.size-1] == 76)
(orig(str) == null)  ==>  (this.buffer[this.size-1] == 76)
(orig(str) == null)  ==>  (this.buffer[this.size] == 0)
(orig(str) == null)  ==>  (this.newLine == null)
(orig(str) == null)  ==>  (this.newLine == orig(str))
(orig(str) == null)  ==>  (this.nullText has only one value)
(orig(str) == null)  ==>  (this.nullText.toString == "NULL")
(orig(str) == null)  ==>  (this.size one of { 4, 15 })
return != null
size(this.buffer[]) one of { 32, 35, 41 }
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == 0
org.apache.commons.lang.text.StrBuilder.CAPACITY <= size(this.buffer[])
org.apache.commons.lang.text.StrBuilder.CAPACITY != this.buffer[this.size]
org.apache.commons.lang.text.StrBuilder.CAPACITY != this.buffer[orig(this.size)]
org.apache.commons.lang.text.StrBuilder.serialVersionUID > this.buffer[this.size]
org.apache.commons.lang.text.StrBuilder.serialVersionUID > this.buffer[orig(this.size)]
this.buffer[] elements >= this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
this.size >= orig(this.size)
this.size < size(this.buffer[])-1
this.size >= this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
orig(this.buffer[]) elements >= this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
orig(this.size) < size(this.buffer[])-1
orig(this.size) >= this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
size(this.buffer[]) != this.buffer[this.size]
size(this.buffer[]) != orig(this.buffer[this.size])
size(this.buffer[])-1 > this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
size(this.buffer[])-1 != this.buffer[this.size]
size(this.buffer[])-1 != this.buffer[orig(this.size)]
size(this.buffer[])-1 != orig(this.buffer[this.size])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] <= this.buffer[this.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] <= this.buffer[orig(this.size)]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] <= orig(this.buffer[this.size])
===========================================================================
org.apache.commons.lang.text.StrBuilder.append(java.lang.String, int, int):::ENTER
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[])
this.size == startIndex
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == this.buffer[this.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == this.buffer[startIndex]
this.buffer[] elements one of { 0, 102, 111 }
this.buffer[] one of { [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
this.size one of { 0, 3 }
this.newLine == null
this.nullText.toString == "NULL"
str.toString one of { "abcbardef", "bar", "foo" }
length one of { 0, 1, 3 }
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == 0
this.buffer[length] one of { 0, 102 }
===========================================================================
org.apache.commons.lang.text.StrBuilder.append(java.lang.String, int, int):::EXIT493
this.newLine == orig(str)
orig(startIndex) == this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
orig(startIndex) == return.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
orig(startIndex) == orig(this.buffer[post(org.apache.commons.lang.text.StrBuilder.CAPACITY)-1])
orig(startIndex) == this.buffer[this.size]
orig(startIndex) == this.buffer[return.size]
orig(startIndex) == return.buffer[this.size]
orig(startIndex) == orig(this.buffer[post(this.size)])
orig(startIndex) == orig(this.buffer[post(this.size)-1])
orig(startIndex) == orig(this.buffer[post(startIndex)])
orig(startIndex) == orig(this.buffer[post(length)])
orig(startIndex) == orig(this.buffer[post(length)-1])
orig(startIndex) == return.buffer[return.size]
orig(startIndex) == orig(this.buffer[post(return.size)])
orig(startIndex) == orig(this.buffer[post(return.size)-1])
orig(startIndex) == orig(this.buffer[this.size])
orig(startIndex) == orig(this.buffer[startIndex])
orig(startIndex) == orig(this.buffer[length])
orig(startIndex) == orig(this.buffer[length-1])
this.buffer[orig(startIndex)] == this.buffer[orig(length)-1]
this.buffer[orig(startIndex)] == return.buffer[orig(length)-1]
this.buffer has only one value
this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
this.size == 4
this.nullText has only one value
return has only one value
orig(this) has only one value
orig(this.buffer[]) == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
orig(this.buffer[]) elements == 0
orig(startIndex) == 0
orig(length) == 1
this.buffer[this.size-1] == 76
this.buffer[orig(startIndex)] == 78
this.buffer[orig(length)] == 85
orig(this.buffer[]) elements == orig(startIndex)
===========================================================================
org.apache.commons.lang.text.StrBuilder.append(java.lang.String, int, int):::EXIT507
this.newLine == this.nullText
this.newLine == return.nullText
this.newLine == orig(this.nullText)
this.buffer has only one value
this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
this.size one of { 3, 6 }
return has only one value
orig(this) has only one value
orig(length) one of { 0, 3 }
this.buffer[this.size-1] one of { 111, 114 }
this.buffer[orig(startIndex)] one of { 0, 98, 102 }
this.buffer[orig(length)] one of { 0, 98, 102 }
===========================================================================
org.apache.commons.lang.text.StrBuilder.append(java.lang.String, int, int):::EXIT
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[])
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(return.buffer[])
this.buffer == return.buffer
this.buffer == orig(this.buffer)
this.buffer[] == return.buffer[]
this.size == return.size
this.newLine == return.newLine
this.newLine == orig(this.newLine)
this.nullText == return.nullText
this.nullText == orig(this.nullText)
str.toString == orig(str.toString)
return == orig(this)
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[post(org.apache.commons.lang.text.StrBuilder.CAPACITY)-1])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == this.buffer[this.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == this.buffer[return.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == return.buffer[this.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[post(this.size)])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[post(startIndex)])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == return.buffer[return.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[post(return.size)])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[this.size])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[startIndex])
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  <==>  (orig(length) == 1)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  <==>  (orig(str) == null)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  <==>  (this.buffer[orig(length)] == 85)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  <==>  (this.buffer[orig(startIndex)] == 78)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  <==>  (this.buffer[this.size-1] == 76)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  <==>  (this.nullText has only one value)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  <==>  (this.size == 4)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(startIndex) == 0)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(startIndex) == orig(this.buffer[length-1]))
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(startIndex) == orig(this.buffer[length]))
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(startIndex) == orig(this.buffer[post(length)-1]))
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(startIndex) == orig(this.buffer[post(this.size)-1]))
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(startIndex) == this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1])
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(this.buffer[]) == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(this.buffer[]) elements == 0)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(this.buffer[]) elements == orig(startIndex))
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(this.buffer[]) elements == orig(this.buffer[length-1]))
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(this.buffer[]) elements == orig(this.buffer[length]))
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(this.buffer[]) elements == orig(this.buffer[post(length)-1]))
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(this.buffer[]) elements == orig(this.buffer[post(this.size)-1]))
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(this.buffer[]) elements == this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1])
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(this.buffer[length-1]) == 0)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(this.buffer[length]) == 0)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(this.buffer[post(length)-1]) == 0)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(this.buffer[post(this.size)-1]) == 0)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (return.buffer[length-1] == 78)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (return.buffer[orig(length)-1] == 78)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (this.buffer[length-1] == 78)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (this.buffer[length-1] == this.buffer[orig(startIndex)])
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (this.buffer[orig(length)-1] == 78)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (this.buffer[orig(startIndex)] == return.buffer[length-1])
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (this.buffer[orig(startIndex)] == return.buffer[orig(length)-1])
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (this.buffer[orig(startIndex)] == this.buffer[orig(length)-1])
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (this.newLine == orig(str))
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (this.nullText.toString == "NULL")
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  <==>  (orig(length) one of { 0, 3 })
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  <==>  (this.buffer[orig(length)] one of { 0, 98, 102 })
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  <==>  (this.buffer[orig(startIndex)] one of { 0, 98, 102 })
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  <==>  (this.buffer[this.size-1] one of { 111, 114 })
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  <==>  (this.nullText == null)
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  <==>  (this.size one of { 3, 6 })
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (orig(startIndex) one of { 0, 3 })
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (orig(this.buffer[]) elements one of { 0, 102, 111 })
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (orig(this.buffer[]) one of { [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (orig(this.buffer[length]) one of { 0, 102 })
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (orig(this.buffer[post(this.size)-1]) one of { 0, 111 })
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (str.toString one of { "abcbardef", "bar", "foo" })
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (this.newLine == this.nullText)
this.buffer[] one of { [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
this.size one of { 3, 4, 6 }
this.newLine == null
this.nullText.toString == "NULL"
str.toString one of { "abcbardef", "bar", "foo" }
orig(startIndex) one of { 0, 3 }
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == 0
this.buffer[this.size-1] one of { 76, 111, 114 }
orig(this.buffer[post(this.size)-1]) one of { 0, 111 }
orig(this.buffer[post(this.size)-1]) in this.buffer[]
orig(this.buffer[length]) in this.buffer[]
===========================================================================
org.apache.commons.lang.text.StrBuilder.append(java.lang.StringBuffer):::ENTER
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == this.buffer[this.size]
this.newLine == null
this.nullText.toString == "NULL"
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == 0
this.buffer[] elements >= this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
this.size < size(this.buffer[])-1
this.size >= this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
===========================================================================
org.apache.commons.lang.text.StrBuilder.append(java.lang.StringBuffer):::EXIT519
this.buffer[] one of { [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [78, 85, 76, 76, 78, 85, 76, 76, 102, 111, 111, 78, 85, 76, 76, 98, 97, 114, 78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
this.size one of { 3, 4, 22 }
orig(this.buffer[]) one of { [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [78, 85, 76, 76, 78, 85, 76, 76, 102, 111, 111, 78, 85, 76, 76, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
orig(this.size) one of { 0, 3, 18 }
orig(str) == null
this.buffer[this.size-1] one of { 76, 111 }
this.buffer[orig(this.size)] one of { 0, 78 }
===========================================================================
org.apache.commons.lang.text.StrBuilder.append(java.lang.StringBuffer):::EXIT528
this.size one of { 3, 6, 25 }
orig(this.buffer[]) one of { [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [78, 85, 76, 76, 78, 85, 76, 76, 102, 111, 111, 78, 85, 76, 76, 98, 97, 114, 78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
orig(this.size) one of { 0, 3, 22 }
this.buffer[this.size-1] one of { 111, 114, 122 }
this.buffer[orig(this.size)] one of { 0, 98, 102 }
===========================================================================
org.apache.commons.lang.text.StrBuilder.append(java.lang.StringBuffer):::EXIT
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[])
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(return.buffer[])
this.buffer == return.buffer
this.buffer == orig(this.buffer)
this.buffer[] == return.buffer[]
this.size == return.size
this.newLine == return.newLine
this.newLine == orig(this.newLine)
this.nullText == return.nullText
this.nullText == orig(this.nullText)
this.nullText.toString == return.nullText.toString
this.nullText.toString == orig(this.nullText.toString)
return == orig(this)
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[post(org.apache.commons.lang.text.StrBuilder.CAPACITY)-1])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == this.buffer[this.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == this.buffer[return.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == return.buffer[this.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[post(this.size)])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == return.buffer[return.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[post(return.size)])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[this.size])
(orig(str) == null)  ==>  (orig(this.buffer[]) one of { [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [78, 85, 76, 76, 78, 85, 76, 76, 102, 111, 111, 78, 85, 76, 76, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })
(orig(str) == null)  ==>  (orig(this.size) one of { 0, 3, 18 })
(orig(str) == null)  ==>  (this.buffer[] one of { [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [78, 85, 76, 76, 78, 85, 76, 76, 102, 111, 111, 78, 85, 76, 76, 98, 97, 114, 78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })
(orig(str) == null)  ==>  (this.buffer[orig(this.size)] one of { 0, 78 })
(orig(str) == null)  ==>  (this.buffer[this.size-1] one of { 76, 111 })
(orig(str) == null)  ==>  (this.size one of { 3, 4, 22 })
this.newLine == null
this.nullText.toString == "NULL"
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == 0
orig(this.buffer[post(this.size)-1]) one of { 0, 111 }
org.apache.commons.lang.text.StrBuilder.CAPACITY < this.buffer[this.size-1]
org.apache.commons.lang.text.StrBuilder.CAPACITY != this.buffer[orig(this.size)]
org.apache.commons.lang.text.StrBuilder.CAPACITY != orig(this.buffer[post(this.size)-1])
org.apache.commons.lang.text.StrBuilder.serialVersionUID > this.buffer[this.size-1]
org.apache.commons.lang.text.StrBuilder.serialVersionUID > this.buffer[orig(this.size)]
org.apache.commons.lang.text.StrBuilder.serialVersionUID > orig(this.buffer[post(this.size)-1])
this.buffer[] >= orig(this.buffer[]) (elementwise)
this.buffer[] elements >= this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
orig(this.buffer[post(this.size)-1]) in this.buffer[]
this.size >= orig(this.size)
this.size < size(this.buffer[])-1
this.size > this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
this.size < this.buffer[this.size-1]
this.size != this.buffer[orig(this.size)]
orig(this.buffer[post(this.size)-1]) % this.size == 0
this.size != orig(this.buffer[post(this.size)-1])
orig(this.buffer[]) elements >= this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
orig(this.size) < size(this.buffer[])-1
orig(this.size) >= this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
orig(this.size) < this.buffer[this.size-1]
orig(this.size) != this.buffer[orig(this.size)]
size(this.buffer[])-1 != this.buffer[orig(this.size)]
size(this.buffer[])-1 != orig(this.buffer[post(this.size)-1])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] < this.buffer[this.size-1]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] <= orig(this.buffer[post(this.size)-1])
this.buffer[this.size-1] != this.buffer[orig(this.size)]
orig(this.buffer[post(this.size)-1]) % this.buffer[this.size-1] == 0
this.buffer[orig(this.size)] != orig(this.buffer[post(this.size)-1])
===========================================================================
org.apache.commons.lang.text.StrBuilder.append(java.lang.StringBuffer, int, int):::ENTER
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[])
this.size == startIndex
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == this.buffer[this.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == this.buffer[startIndex]
this.buffer[] elements one of { 0, 102, 111 }
this.buffer[] one of { [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
this.size one of { 0, 3 }
this.newLine == null
this.nullText.toString == "NULL"
length one of { 0, 1, 3 }
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == 0
this.buffer[length] one of { 0, 102 }
===========================================================================
org.apache.commons.lang.text.StrBuilder.append(java.lang.StringBuffer, int, int):::EXIT542
orig(startIndex) == this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
orig(startIndex) == return.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
orig(startIndex) == orig(this.buffer[post(org.apache.commons.lang.text.StrBuilder.CAPACITY)-1])
orig(startIndex) == this.buffer[this.size]
orig(startIndex) == this.buffer[return.size]
orig(startIndex) == return.buffer[this.size]
orig(startIndex) == orig(this.buffer[post(this.size)])
orig(startIndex) == orig(this.buffer[post(this.size)-1])
orig(startIndex) == orig(this.buffer[post(startIndex)])
orig(startIndex) == orig(this.buffer[post(length)])
orig(startIndex) == orig(this.buffer[post(length)-1])
orig(startIndex) == return.buffer[return.size]
orig(startIndex) == orig(this.buffer[post(return.size)])
orig(startIndex) == orig(this.buffer[post(return.size)-1])
orig(startIndex) == orig(this.buffer[this.size])
orig(startIndex) == orig(this.buffer[startIndex])
orig(startIndex) == orig(this.buffer[length])
orig(startIndex) == orig(this.buffer[length-1])
this.buffer[orig(startIndex)] == this.buffer[orig(length)-1]
this.buffer[orig(startIndex)] == return.buffer[orig(length)-1]
this.buffer has only one value
this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
this.size == 4
this.nullText has only one value
return has only one value
orig(this) has only one value
orig(this.buffer[]) == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
orig(this.buffer[]) elements == 0
orig(str) == null
orig(startIndex) == 0
orig(length) == 1
this.buffer[this.size-1] == 76
this.buffer[orig(startIndex)] == 78
this.buffer[orig(length)] == 85
orig(this.buffer[]) elements == orig(startIndex)
===========================================================================
org.apache.commons.lang.text.StrBuilder.append(java.lang.StringBuffer, int, int):::EXIT556
this.newLine == this.nullText
this.newLine == return.nullText
this.newLine == orig(this.nullText)
this.buffer has only one value
this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
this.size one of { 3, 6 }
return has only one value
orig(this) has only one value
orig(length) one of { 0, 3 }
this.buffer[this.size-1] one of { 111, 114 }
this.buffer[orig(startIndex)] one of { 0, 98, 102 }
this.buffer[orig(length)] one of { 0, 98, 102 }
===========================================================================
org.apache.commons.lang.text.StrBuilder.append(java.lang.StringBuffer, int, int):::EXIT
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[])
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(return.buffer[])
this.buffer == return.buffer
this.buffer == orig(this.buffer)
this.buffer[] == return.buffer[]
this.size == return.size
this.newLine == return.newLine
this.newLine == orig(this.newLine)
this.nullText == return.nullText
this.nullText == orig(this.nullText)
return == orig(this)
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[post(org.apache.commons.lang.text.StrBuilder.CAPACITY)-1])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == this.buffer[this.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == this.buffer[return.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == return.buffer[this.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[post(this.size)])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[post(startIndex)])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == return.buffer[return.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[post(return.size)])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[this.size])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[startIndex])
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  <==>  (orig(length) == 1)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  <==>  (orig(str) == null)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  <==>  (this.buffer[orig(length)] == 85)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  <==>  (this.buffer[orig(startIndex)] == 78)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  <==>  (this.buffer[this.size-1] == 76)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  <==>  (this.nullText has only one value)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  <==>  (this.size == 4)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(startIndex) == 0)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(startIndex) == orig(this.buffer[length-1]))
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(startIndex) == orig(this.buffer[length]))
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(startIndex) == orig(this.buffer[post(length)-1]))
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(startIndex) == orig(this.buffer[post(this.size)-1]))
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(startIndex) == this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1])
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(this.buffer[]) == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(this.buffer[]) elements == 0)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(this.buffer[]) elements == orig(startIndex))
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(this.buffer[]) elements == orig(this.buffer[length-1]))
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(this.buffer[]) elements == orig(this.buffer[length]))
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(this.buffer[]) elements == orig(this.buffer[post(length)-1]))
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(this.buffer[]) elements == orig(this.buffer[post(this.size)-1]))
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(this.buffer[]) elements == this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1])
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(this.buffer[length-1]) == 0)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(this.buffer[length]) == 0)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(this.buffer[post(length)-1]) == 0)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(this.buffer[post(this.size)-1]) == 0)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (return.buffer[length-1] == 78)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (return.buffer[orig(length)-1] == 78)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (this.buffer[length-1] == 78)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (this.buffer[length-1] == this.buffer[orig(startIndex)])
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (this.buffer[orig(length)-1] == 78)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (this.buffer[orig(startIndex)] == return.buffer[length-1])
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (this.buffer[orig(startIndex)] == return.buffer[orig(length)-1])
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (this.buffer[orig(startIndex)] == this.buffer[orig(length)-1])
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (this.nullText.toString == "NULL")
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  <==>  (orig(length) one of { 0, 3 })
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  <==>  (this.buffer[orig(length)] one of { 0, 98, 102 })
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  <==>  (this.buffer[orig(startIndex)] one of { 0, 98, 102 })
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  <==>  (this.buffer[this.size-1] one of { 111, 114 })
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  <==>  (this.nullText == null)
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  <==>  (this.size one of { 3, 6 })
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (orig(startIndex) one of { 0, 3 })
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (orig(this.buffer[]) elements one of { 0, 102, 111 })
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (orig(this.buffer[]) one of { [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (orig(this.buffer[length]) one of { 0, 102 })
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (orig(this.buffer[post(this.size)-1]) one of { 0, 111 })
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (this.newLine == this.nullText)
this.buffer[] one of { [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
this.size one of { 3, 4, 6 }
this.newLine == null
this.nullText.toString == "NULL"
orig(startIndex) one of { 0, 3 }
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == 0
this.buffer[this.size-1] one of { 76, 111, 114 }
orig(this.buffer[post(this.size)-1]) one of { 0, 111 }
orig(this.buffer[post(this.size)-1]) in this.buffer[]
orig(this.buffer[length]) in this.buffer[]
===========================================================================
org.apache.commons.lang.text.StrBuilder.append(long):::ENTER
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[])
this.size == value
this.newLine == this.nullText
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == this.buffer[this.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == this.buffer[value]
this has only one value
this.buffer has only one value
this.buffer[] == [48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
this.buffer[] elements one of { 0, 48 }
this.size == 1
this.newLine == null
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == 0
this.buffer[this.size-1] == 48
===========================================================================
org.apache.commons.lang.text.StrBuilder.append(long):::EXIT
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[])
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(return.buffer[])
this.buffer == return.buffer
this.buffer == orig(this.buffer)
this.buffer[] == return.buffer[]
this.size == return.size
this.newLine == this.nullText
this.newLine == return.newLine
this.newLine == return.nullText
this.newLine == orig(this.newLine)
this.newLine == orig(this.nullText)
return == orig(this)
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[post(org.apache.commons.lang.text.StrBuilder.CAPACITY)-1])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == this.buffer[this.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == this.buffer[return.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == return.buffer[this.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[post(this.size)])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[post(this.size)-1])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[post(value)])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == return.buffer[return.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[post(return.size)])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[post(return.size)-1])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[this.size])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[value])
this.buffer[this.size-1] == this.buffer[orig(value)]
this.buffer[return.size-1] == this.buffer[orig(value)]
this.buffer[orig(value)] == return.buffer[this.size-1]
this.buffer[orig(value)] == return.buffer[return.size-1]
this.buffer[orig(value)-1] == orig(this.buffer[post(value)-1])
this.buffer[orig(value)-1] == orig(this.buffer[this.size-1])
this.buffer[orig(value)-1] == orig(this.buffer[value-1])
this.buffer has only one value
this.buffer[] == [48, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
this.buffer[] elements one of { 0, 48, 49 }
this.size == 2
this.newLine == null
return has only one value
orig(value) == 1
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == 0
this.buffer[orig(value)] == 49
this.buffer[orig(value)-1] == 48
===========================================================================
org.apache.commons.lang.text.StrBuilder.append(org.apache.commons.lang.text.StrBuilder):::ENTER
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[])
this.newLine == str.newLine
this.nullText == str.newLine
str.newLine == str.nullText
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == str.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == this.buffer[this.size]
str.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == str.buffer[str.size]
this.buffer[] one of { [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
this.size one of { 0, 3, 6 }
this.newLine == null
this.nullText.toString == "NULL"
str.buffer[] elements >= 0
str.size one of { 0, 3 }
str.newLine == null
size(str.buffer[]) one of { 32, 35 }
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == 0
str.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == 0
this.buffer[str.size] one of { 0, 98, 102 }
str.buffer[this.size] one of { 0, 102 }
str.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] in this.buffer[]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] in str.buffer[]
===========================================================================
org.apache.commons.lang.text.StrBuilder.append(org.apache.commons.lang.text.StrBuilder):::EXIT568
orig(this.size) == this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
orig(this.size) == return.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
orig(this.size) == orig(this.buffer[post(org.apache.commons.lang.text.StrBuilder.CAPACITY)-1])
orig(this.size) == this.buffer[this.size]
orig(this.size) == this.buffer[return.size]
orig(this.size) == return.buffer[this.size]
orig(this.size) == orig(this.buffer[post(this.size)])
orig(this.size) == orig(this.buffer[post(this.size)-1])
orig(this.size) == return.buffer[return.size]
orig(this.size) == orig(this.buffer[post(return.size)])
orig(this.size) == orig(this.buffer[post(return.size)-1])
orig(this.size) == orig(this.buffer[this.size])
this.buffer has only one value
this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
this.size == 4
this.nullText has only one value
return has only one value
orig(this) has only one value
orig(this.buffer[]) == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
orig(this.buffer[]) elements == 0
orig(this.size) == 0
orig(str) == null
this.buffer[this.size-1] == 76
this.buffer[orig(this.size)] == 78
orig(this.buffer[]) elements == orig(this.size)
===========================================================================
org.apache.commons.lang.text.StrBuilder.append(org.apache.commons.lang.text.StrBuilder):::EXIT577
this.newLine == this.nullText
this.newLine == str.nullText
this.newLine == return.nullText
this.newLine == orig(this.nullText)
this.newLine == orig(str.newLine)
this.newLine == orig(str.nullText)
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(str.buffer[post(org.apache.commons.lang.text.StrBuilder.CAPACITY)-1])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == str.buffer[this.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(str.buffer[post(this.size)])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == str.buffer[str.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == str.buffer[return.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == str.buffer[orig(str.size)]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(str.buffer[post(str.size)])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(str.buffer[post(return.size)])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(str.buffer[str.size])
this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 122, 121, 101, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
this.size one of { 3, 6, 9 }
this.buffer[this.size-1] one of { 111, 114, 115 }
===========================================================================
org.apache.commons.lang.text.StrBuilder.append(org.apache.commons.lang.text.StrBuilder):::EXIT
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[])
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(return.buffer[])
this.buffer == return.buffer
this.buffer == orig(this.buffer)
this.buffer[] == return.buffer[]
this.size == return.size
this.newLine == str.newLine
this.newLine == return.newLine
this.newLine == orig(this.newLine)
this.nullText == str.newLine
this.nullText == return.nullText
this.nullText == orig(this.nullText)
str.buffer == orig(str.buffer)
str.buffer[] == orig(str.buffer[])
str.size == orig(str.size)
str.newLine == str.nullText
str.newLine == orig(str.newLine)
str.newLine == orig(str.nullText)
return == orig(this)
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == str.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[post(org.apache.commons.lang.text.StrBuilder.CAPACITY)-1])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == this.buffer[this.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == this.buffer[return.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == return.buffer[this.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[post(this.size)])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == return.buffer[return.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[post(return.size)])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[this.size])
str.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == str.buffer[this.size]
str.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(str.buffer[post(this.size)])
str.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == str.buffer[str.size]
str.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == str.buffer[return.size]
str.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == str.buffer[orig(str.size)]
str.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(str.buffer[post(str.size)])
str.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(str.buffer[post(return.size)])
str.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(str.buffer[str.size])
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  <==>  (orig(str) == null)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  <==>  (this.buffer[this.size-1] == 76)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  <==>  (this.nullText has only one value)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  <==>  (this.size == 4)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(this) has only one value)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(this.buffer[]) == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(this.buffer[]) elements == 0)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(this.buffer[]) elements == orig(this.buffer[post(this.size)-1]))
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(this.buffer[]) elements == orig(this.size))
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(this.buffer[]) elements == this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1])
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(this.buffer[post(this.size)-1]) == 0)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(this.size) == 0)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(this.size) == orig(this.buffer[post(this.size)-1]))
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(this.size) == this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1])
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (return has only one value)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (this.buffer has only one value)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (this.buffer[orig(this.size)] == 78)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (this.nullText.toString == "NULL")
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 122, 121, 101, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  <==>  (this.buffer[this.size-1] one of { 111, 114, 115 })
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 122, 121, 101, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  <==>  (this.nullText == null)
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 122, 121, 101, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  <==>  (this.size one of { 3, 6, 9 })
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 122, 121, 101, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (orig(this.buffer[]) one of { [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 122, 121, 101, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (orig(this.buffer[post(this.size)-1]) one of { 0, 111 })
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 122, 121, 101, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (orig(this.buffer[str.size]) in this.buffer[])
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 122, 121, 101, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (orig(this.buffer[str.size]) one of { 0, 98, 102 })
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 122, 121, 101, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (orig(this.size) one of { 0, 3, 6 })
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 122, 121, 101, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (size(str.buffer[]) one of { 32, 35 })
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 122, 121, 101, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (str.buffer[] elements >= 0)
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 122, 121, 101, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (str.buffer[orig(this.size)] in this.buffer[])
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 122, 121, 101, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (str.buffer[orig(this.size)] one of { 0, 102 })
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 122, 121, 101, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (str.buffer[this.size-1] in this.buffer[])
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 122, 121, 101, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (str.buffer[this.size-1] one of { 0, 111 })
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 122, 121, 101, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (str.newLine == null)
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 122, 121, 101, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (str.size one of { 0, 3 })
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 122, 121, 101, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (this.buffer[orig(this.size)] in str.buffer[])
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 122, 121, 101, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (this.buffer[str.size] one of { 0, 98, 102 })
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 122, 121, 101, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (this.newLine == str.newLine)
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 122, 121, 101, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (this.newLine == this.nullText)
this.newLine == null
this.nullText.toString == "NULL"
str.buffer[] elements >= 0
str.size one of { 0, 3 }
str.newLine == null
size(str.buffer[]) one of { 32, 35 }
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == 0
str.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == 0
this.buffer[str.size] one of { 0, 98, 102 }
str.buffer[this.size-1] one of { 0, 111 }
orig(this.buffer[post(this.size)-1]) one of { 0, 111 }
str.buffer[orig(this.size)] one of { 0, 102 }
str.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] in this.buffer[]
str.buffer[this.size-1] in this.buffer[]
orig(this.buffer[post(this.size)-1]) in this.buffer[]
str.buffer[orig(this.size)] in this.buffer[]
orig(this.buffer[str.size]) in this.buffer[]
orig(this.buffer[post(this.size)-1]) % this.size == 0
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] in str.buffer[]
this.buffer[orig(this.size)] in str.buffer[]
str.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] in orig(this.buffer[])
orig(this.buffer[post(this.size)-1]) % this.buffer[this.size-1] == 0
===========================================================================
org.apache.commons.lang.text.StrBuilder.append(org.apache.commons.lang.text.StrBuilder, int, int):::ENTER
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[])
this.size == startIndex
this.newLine == str.newLine
this.nullText == str.newLine
str.newLine == str.nullText
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == this.buffer[this.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == this.buffer[str.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == this.buffer[startIndex]
str.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == this.buffer[str.size]
str.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == this.buffer[str.size]
this.buffer[str.size] == str.buffer[str.size]
this.buffer[] elements one of { 0, 102, 111 }
this.buffer[] one of { [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
this.size one of { 0, 3 }
this.newLine == null
this.nullText.toString == "NULL"
str.buffer[] one of { [97, 98, 99, 98, 97, 114, 100, 101, 102, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
str.buffer[] elements >= 0
str.size one of { 3, 9 }
str.newLine == null
length one of { 0, 1, 3 }
size(str.buffer[]) one of { 35, 41 }
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == 0
this.buffer[str.size] == 0
this.buffer[str.size-1] one of { 0, 111 }
this.buffer[length] one of { 0, 102 }
str.buffer[str.size-1] one of { 102, 111, 114 }
str.buffer[startIndex] one of { 0, 98, 102 }
str.buffer[length] one of { 0, 98 }
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] in str.buffer[]
===========================================================================
org.apache.commons.lang.text.StrBuilder.append(org.apache.commons.lang.text.StrBuilder, int, int):::EXIT591
orig(startIndex) == this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
orig(startIndex) == return.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
orig(startIndex) == orig(this.buffer[post(org.apache.commons.lang.text.StrBuilder.CAPACITY)-1])
orig(startIndex) == this.buffer[this.size]
orig(startIndex) == this.buffer[return.size]
orig(startIndex) == return.buffer[this.size]
orig(startIndex) == orig(this.buffer[post(this.size)])
orig(startIndex) == orig(this.buffer[post(this.size)-1])
orig(startIndex) == orig(this.buffer[post(startIndex)])
orig(startIndex) == orig(this.buffer[post(length)])
orig(startIndex) == orig(this.buffer[post(length)-1])
orig(startIndex) == return.buffer[return.size]
orig(startIndex) == orig(this.buffer[post(return.size)])
orig(startIndex) == orig(this.buffer[post(return.size)-1])
orig(startIndex) == orig(this.buffer[this.size])
orig(startIndex) == orig(this.buffer[startIndex])
orig(startIndex) == orig(this.buffer[length])
orig(startIndex) == orig(this.buffer[length-1])
this.buffer[orig(startIndex)] == this.buffer[orig(length)-1]
this.buffer[orig(startIndex)] == return.buffer[orig(length)-1]
this.buffer has only one value
this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
this.size == 4
this.nullText has only one value
return has only one value
orig(this) has only one value
orig(this.buffer[]) == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
orig(this.buffer[]) elements == 0
orig(str) == null
orig(startIndex) == 0
orig(length) == 1
this.buffer[this.size-1] == 76
this.buffer[orig(startIndex)] == 78
this.buffer[orig(length)] == 85
orig(this.buffer[]) elements == orig(startIndex)
===========================================================================
org.apache.commons.lang.text.StrBuilder.append(org.apache.commons.lang.text.StrBuilder, int, int):::EXIT605
this.newLine == this.nullText
this.newLine == str.nullText
this.newLine == return.nullText
this.newLine == orig(this.nullText)
this.newLine == orig(str.newLine)
this.newLine == orig(str.nullText)
str.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == return.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
str.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == orig(this.buffer[post(org.apache.commons.lang.text.StrBuilder.CAPACITY)-1])
str.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == this.buffer[this.size]
str.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == this.buffer[return.size]
str.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == return.buffer[this.size]
str.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == orig(this.buffer[post(this.size)])
str.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == orig(this.buffer[post(startIndex)])
str.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == return.buffer[return.size]
str.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == orig(this.buffer[post(return.size)])
str.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == orig(this.buffer[this.size])
str.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == orig(this.buffer[startIndex])
this.buffer[orig(startIndex)] == str.buffer[orig(this.size)]
this.buffer[orig(startIndex)] == orig(str.buffer[post(startIndex)])
this.buffer[orig(startIndex)] == orig(str.buffer[this.size])
this.buffer[orig(startIndex)] == orig(str.buffer[startIndex])
orig(this.buffer[post(return.size)-1]) == orig(this.buffer[str.size-1])
this.buffer has only one value
this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
this.size one of { 3, 6 }
return has only one value
orig(this) has only one value
orig(length) one of { 0, 3 }
this.buffer[this.size-1] one of { 111, 114 }
this.buffer[orig(startIndex)] one of { 0, 98, 102 }
this.buffer[orig(length)] one of { 0, 98, 102 }
===========================================================================
org.apache.commons.lang.text.StrBuilder.append(org.apache.commons.lang.text.StrBuilder, int, int):::EXIT
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[])
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(return.buffer[])
this.buffer == return.buffer
this.buffer == orig(this.buffer)
this.buffer[] == return.buffer[]
this.size == return.size
this.newLine == str.newLine
this.newLine == return.newLine
this.newLine == orig(this.newLine)
this.nullText == str.newLine
this.nullText == return.nullText
this.nullText == orig(this.nullText)
str.buffer == orig(str.buffer)
str.buffer[] == orig(str.buffer[])
str.size == orig(str.size)
str.newLine == str.nullText
str.newLine == orig(str.newLine)
str.newLine == orig(str.nullText)
return == orig(this)
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == str.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[post(org.apache.commons.lang.text.StrBuilder.CAPACITY)-1])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == this.buffer[this.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == this.buffer[return.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == return.buffer[this.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[post(this.size)])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[post(startIndex)])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == return.buffer[return.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[post(return.size)])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[this.size])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[startIndex])
str.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == str.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
str.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == orig(str.buffer[post(org.apache.commons.lang.text.StrBuilder.CAPACITY)-1])
str.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == this.buffer[str.size]
str.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == this.buffer[orig(str.size)]
str.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == str.buffer[str.size]
str.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == str.buffer[orig(str.size)]
str.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == return.buffer[str.size]
str.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == orig(this.buffer[post(str.size)])
str.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == orig(str.buffer[post(str.size)])
str.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == return.buffer[orig(str.size)]
str.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == orig(this.buffer[str.size])
str.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == orig(str.buffer[str.size])
this.buffer[orig(startIndex)] == str.buffer[orig(startIndex)]
orig(this.buffer[post(this.size)-1]) == orig(this.buffer[str.size-1])
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  <==>  (orig(length) == 1)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  <==>  (orig(str) == null)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  <==>  (this.buffer[orig(length)] == 85)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  <==>  (this.buffer[orig(startIndex)] == 78)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  <==>  (this.buffer[this.size-1] == 76)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  <==>  (this.nullText has only one value)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  <==>  (this.size == 4)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(startIndex) == 0)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(startIndex) == orig(this.buffer[length-1]))
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(startIndex) == orig(this.buffer[length]))
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(startIndex) == orig(this.buffer[post(length)-1]))
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(startIndex) == orig(this.buffer[post(this.size)-1]))
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(startIndex) == this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1])
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(this.buffer[]) == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(this.buffer[]) elements == 0)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(this.buffer[]) elements == orig(startIndex))
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(this.buffer[]) elements == orig(this.buffer[length-1]))
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(this.buffer[]) elements == orig(this.buffer[length]))
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(this.buffer[]) elements == orig(this.buffer[post(length)-1]))
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(this.buffer[]) elements == orig(this.buffer[post(this.size)-1]))
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(this.buffer[]) elements == this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1])
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(this.buffer[length-1]) == 0)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(this.buffer[length]) == 0)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(this.buffer[post(length)-1]) == 0)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(this.buffer[post(this.size)-1]) == 0)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (return.buffer[length-1] == 78)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (return.buffer[orig(length)-1] == 78)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (this.buffer[length-1] == 78)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (this.buffer[length-1] == this.buffer[orig(startIndex)])
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (this.buffer[orig(length)-1] == 78)
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (this.buffer[orig(startIndex)] == return.buffer[length-1])
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (this.buffer[orig(startIndex)] == return.buffer[orig(length)-1])
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (this.buffer[orig(startIndex)] == this.buffer[orig(length)-1])
(this.buffer[] == [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (this.nullText.toString == "NULL")
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  <==>  (orig(length) one of { 0, 3 })
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  <==>  (this.buffer[orig(length)] one of { 0, 98, 102 })
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  <==>  (this.buffer[orig(startIndex)] one of { 0, 98, 102 })
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  <==>  (this.buffer[this.size-1] one of { 111, 114 })
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  <==>  (this.nullText == null)
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  <==>  (this.size one of { 3, 6 })
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (orig(startIndex) one of { 0, 3 })
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (orig(this.buffer[]) elements one of { 0, 102, 111 })
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (orig(this.buffer[]) one of { [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (orig(this.buffer[length]) one of { 0, 102 })
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (orig(this.buffer[post(this.size)-1]) == orig(this.buffer[str.size-1]))
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (orig(this.buffer[post(this.size)-1]) one of { 0, 111 })
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (orig(this.buffer[str.size-1]) in this.buffer[])
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (orig(this.buffer[str.size-1]) one of { 0, 111 })
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (size(str.buffer[]) one of { 35, 41 })
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (str.buffer[] elements >= 0)
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (str.buffer[] one of { [97, 98, 99, 98, 97, 114, 100, 101, 102, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (str.buffer[orig(length)] one of { 0, 98 })
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (str.buffer[orig(startIndex)] one of { 0, 98, 102 })
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (str.buffer[str.size-1] one of { 102, 111, 114 })
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (str.buffer[this.size-1] one of { 111, 114 })
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (str.buffer[this.size] one of { 0, 100 })
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (str.newLine == null)
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (str.size one of { 3, 9 })
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (this.buffer[orig(startIndex)] == str.buffer[orig(startIndex)])
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (this.buffer[str.size-1] one of { 0, 111 })
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (this.newLine == str.newLine)
(this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (this.newLine == this.nullText)
this.buffer[] one of { [78, 85, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
this.size one of { 3, 4, 6 }
this.newLine == null
this.nullText.toString == "NULL"
str.buffer[] one of { [97, 98, 99, 98, 97, 114, 100, 101, 102, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
str.buffer[] elements >= 0
str.size one of { 3, 9 }
str.newLine == null
orig(startIndex) one of { 0, 3 }
size(str.buffer[]) one of { 35, 41 }
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == 0
str.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == 0
this.buffer[this.size-1] one of { 76, 111, 114 }
this.buffer[str.size-1] one of { 0, 111 }
str.buffer[this.size] one of { 0, 100 }
str.buffer[this.size-1] one of { 111, 114 }
orig(this.buffer[post(this.size)-1]) one of { 0, 111 }
str.buffer[str.size-1] one of { 102, 111, 114 }
str.buffer[orig(startIndex)] one of { 0, 98, 102 }
str.buffer[orig(length)] one of { 0, 98 }
orig(this.buffer[post(this.size)-1]) in this.buffer[]
str.buffer[orig(startIndex)] in this.buffer[]
orig(this.buffer[str.size-1]) in this.buffer[]
orig(this.buffer[length]) in this.buffer[]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] in str.buffer[]
this.buffer[orig(startIndex)] in str.buffer[]
===========================================================================
org.apache.commons.lang.text.StrBuilder.appendFixedWidthPadLeft(int, int, char):::ENTER
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[])
this.size == this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
this.newLine == this.nullText
this has only one value
this.buffer has only one value
this.size == 0
this.newLine == null
value == 123
padChar == 45
org.apache.commons.lang.text.StrBuilder.CAPACITY != this.buffer[this.size]
org.apache.commons.lang.text.StrBuilder.serialVersionUID > width
org.apache.commons.lang.text.StrBuilder.serialVersionUID > this.buffer[this.size]
this.buffer[] elements >= this.size
this.buffer[] elements < value
this.size <= this.buffer[this.size]
value > width
value > this.buffer[this.size]
width < padChar
width < size(this.buffer[])-1
size(this.buffer[])-1 != this.buffer[this.size]
===========================================================================
org.apache.commons.lang.text.StrBuilder.appendFixedWidthPadLeft(int, int, char):::EXIT
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[])
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(return.buffer[])
this.buffer == return.buffer
this.buffer == orig(this.buffer)
this.buffer[] == return.buffer[]
this.size == return.size
this.newLine == this.nullText
this.newLine == return.newLine
this.newLine == return.nullText
this.newLine == orig(this.newLine)
this.newLine == orig(this.nullText)
return == orig(this)
orig(this.size) == this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
orig(this.size) == return.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
orig(this.size) == this.buffer[this.size]
orig(this.size) == this.buffer[return.size]
orig(this.size) == return.buffer[this.size]
orig(this.size) == orig(this.buffer[post(this.size)])
orig(this.size) == return.buffer[return.size]
orig(this.size) == orig(this.buffer[post(return.size)])
this.buffer has only one value
this.newLine == null
return has only one value
org.apache.commons.lang.text.StrBuilder.CAPACITY != this.buffer[orig(this.size)]
org.apache.commons.lang.text.StrBuilder.serialVersionUID > this.buffer[orig(this.size)]
this.buffer[] elements >= orig(this.size)
this.buffer[] elements < orig(value)
orig(this.buffer[this.size]) in this.buffer[]
this.size >= orig(this.size)
this.size < orig(value)
this.size >= orig(width)
this.size < orig(padChar)
this.size < size(this.buffer[])-1
this.size <= this.buffer[orig(this.size)]
orig(this.size) <= this.buffer[orig(this.size)]
orig(value) > this.buffer[orig(this.size)]
orig(width) < size(this.buffer[])-1
orig(width) <= this.buffer[orig(this.size)]
size(this.buffer[])-1 != this.buffer[orig(this.size)]
size(this.buffer[])-1 != orig(this.buffer[this.size])
===========================================================================
org.apache.commons.lang.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object, int, char):::ENTER
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[])
this.size == this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
this.size == 0
this.newLine == null
this.nullText.toString == "null"
obj.getClass().getName() == java.lang.String.class
padChar == 45
org.apache.commons.lang.text.StrBuilder.CAPACITY != this.buffer[this.size]
org.apache.commons.lang.text.StrBuilder.serialVersionUID > width
org.apache.commons.lang.text.StrBuilder.serialVersionUID > this.buffer[this.size]
this.buffer[] elements >= this.size
this.size <= this.buffer[this.size]
width < padChar
width < size(this.buffer[])-1
size(this.buffer[])-1 != this.buffer[this.size]
===========================================================================
org.apache.commons.lang.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object, int, char):::EXIT
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[])
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(return.buffer[])
this.buffer == return.buffer
this.buffer == orig(this.buffer)
this.buffer[] == return.buffer[]
this.size == return.size
this.newLine == return.newLine
this.newLine == orig(this.newLine)
this.nullText == return.nullText
this.nullText == orig(this.nullText)
return == orig(this)
orig(this.size) == this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
orig(this.size) == return.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
this.buffer[this.size] == orig(this.buffer[post(this.size)])
this.buffer[this.size] == orig(this.buffer[post(return.size)])
this.newLine == null
this.nullText.toString == "null"
return != null
this.buffer[this.size] one of { 0, 45 }
org.apache.commons.lang.text.StrBuilder.CAPACITY != this.buffer[this.size]
org.apache.commons.lang.text.StrBuilder.CAPACITY != this.buffer[orig(this.size)]
org.apache.commons.lang.text.StrBuilder.serialVersionUID > this.buffer[this.size]
org.apache.commons.lang.text.StrBuilder.serialVersionUID > this.buffer[orig(this.size)]
this.buffer[] elements >= orig(this.size)
orig(this.buffer[this.size]) in this.buffer[]
this.size >= orig(this.size)
this.size >= orig(width)
this.size < orig(padChar)
this.size < size(this.buffer[])-1
this.size <= this.buffer[orig(this.size)]
orig(this.size) <= this.buffer[this.size]
orig(this.size) <= this.buffer[orig(this.size)]
orig(width) < size(this.buffer[])-1
orig(width) <= this.buffer[orig(this.size)]
orig(padChar) >= this.buffer[this.size]
size(this.buffer[])-1 != this.buffer[this.size]
size(this.buffer[])-1 != this.buffer[orig(this.size)]
size(this.buffer[])-1 != orig(this.buffer[this.size])
this.buffer[this.size] <= this.buffer[orig(this.size)]
this.buffer[this.size] <= orig(this.buffer[this.size])
===========================================================================
org.apache.commons.lang.text.StrBuilder.appendFixedWidthPadRight(int, int, char):::ENTER
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[])
this.size == this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
this.newLine == this.nullText
this has only one value
this.buffer has only one value
this.size == 0
this.newLine == null
value == 123
padChar == 45
this.buffer[this.size] one of { 0, 49 }
org.apache.commons.lang.text.StrBuilder.CAPACITY != this.buffer[this.size]
org.apache.commons.lang.text.StrBuilder.serialVersionUID > width
org.apache.commons.lang.text.StrBuilder.serialVersionUID > this.buffer[this.size]
this.buffer[] elements >= this.size
this.buffer[] elements < value
this.size <= this.buffer[this.size]
value > width
value > this.buffer[this.size]
width < padChar
width < size(this.buffer[])-1
padChar != this.buffer[this.size]
size(this.buffer[])-1 != this.buffer[this.size]
===========================================================================
org.apache.commons.lang.text.StrBuilder.appendFixedWidthPadRight(int, int, char):::EXIT
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[])
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(return.buffer[])
this.buffer == return.buffer
this.buffer == orig(this.buffer)
this.buffer[] == return.buffer[]
this.size == return.size
this.newLine == this.nullText
this.newLine == return.newLine
this.newLine == return.nullText
this.newLine == orig(this.newLine)
this.newLine == orig(this.nullText)
return == orig(this)
orig(this.size) == this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
orig(this.size) == return.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
orig(this.size) == this.buffer[this.size]
orig(this.size) == this.buffer[return.size]
orig(this.size) == return.buffer[this.size]
orig(this.size) == orig(this.buffer[post(this.size)])
orig(this.size) == return.buffer[return.size]
orig(this.size) == orig(this.buffer[post(return.size)])
this.buffer has only one value
this.newLine == null
return has only one value
this.buffer[orig(this.size)] one of { 0, 49 }
org.apache.commons.lang.text.StrBuilder.CAPACITY != this.buffer[orig(this.size)]
org.apache.commons.lang.text.StrBuilder.serialVersionUID > this.buffer[orig(this.size)]
this.buffer[] >= orig(this.buffer[]) (elementwise)
this.buffer[] elements >= orig(this.size)
this.buffer[] elements < orig(value)
orig(this.buffer[this.size]) in this.buffer[]
this.size >= orig(this.size)
this.size < orig(value)
this.size >= orig(width)
this.size < orig(padChar)
this.size < size(this.buffer[])-1
this.size <= this.buffer[orig(this.size)]
orig(this.size) <= this.buffer[orig(this.size)]
orig(value) > this.buffer[orig(this.size)]
orig(width) < size(this.buffer[])-1
orig(width) <= this.buffer[orig(this.size)]
orig(padChar) != this.buffer[orig(this.size)]
size(this.buffer[])-1 != this.buffer[orig(this.size)]
size(this.buffer[])-1 != orig(this.buffer[this.size])
===========================================================================
org.apache.commons.lang.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object, int, char):::ENTER
this.size == 0
this.newLine == null
this.nullText.toString == "null"
obj.getClass().getName() == java.lang.String.class
padChar == 45
size(this.buffer[]) one of { 1, 32 }
this.buffer[this.size] one of { 0, 49, 102 }
org.apache.commons.lang.text.StrBuilder.CAPACITY > width
org.apache.commons.lang.text.StrBuilder.CAPACITY >= size(this.buffer[])
org.apache.commons.lang.text.StrBuilder.CAPACITY != this.buffer[this.size]
org.apache.commons.lang.text.StrBuilder.serialVersionUID > width
org.apache.commons.lang.text.StrBuilder.serialVersionUID > this.buffer[this.size]
this.buffer[] elements >= this.size
this.size in this.buffer[]
this.size <= size(this.buffer[])-1
this.size <= this.buffer[this.size]
width < padChar
width <= size(this.buffer[])
width != size(this.buffer[])-1
padChar > size(this.buffer[])
padChar != this.buffer[this.size]
size(this.buffer[]) != this.buffer[this.size]
===========================================================================
org.apache.commons.lang.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object, int, char):::EXIT
this.buffer == return.buffer
this.buffer == orig(this.buffer)
this.buffer[] == return.buffer[]
this.size == return.size
this.newLine == return.newLine
this.newLine == orig(this.newLine)
this.nullText == return.nullText
this.nullText == orig(this.nullText)
return == orig(this)
size(this.buffer[]) == orig(size(this.buffer[]))
this.newLine == null
this.nullText.toString == "null"
return != null
size(this.buffer[]) one of { 1, 32 }
org.apache.commons.lang.text.StrBuilder.CAPACITY >= size(this.buffer[])
org.apache.commons.lang.text.StrBuilder.CAPACITY != this.buffer[orig(this.size)]
org.apache.commons.lang.text.StrBuilder.serialVersionUID > this.buffer[orig(this.size)]
this.buffer[] >= orig(this.buffer[]) (lexically)
this.buffer[] elements >= orig(this.size)
this.size >= orig(this.size)
this.size >= orig(width)
this.size < orig(padChar)
this.size != size(this.buffer[])-1
this.size <= this.buffer[orig(this.size)]
orig(this.size) <= size(this.buffer[])-1
orig(this.size) <= this.buffer[orig(this.size)]
orig(width) <= size(this.buffer[])
orig(width) != size(this.buffer[])-1
orig(width) <= this.buffer[orig(this.size)]
orig(padChar) > size(this.buffer[])
orig(padChar) != this.buffer[orig(this.size)]
size(this.buffer[]) != this.buffer[orig(this.size)]
size(this.buffer[]) != orig(this.buffer[this.size])
size(this.buffer[])-1 != this.buffer[orig(this.size)]
this.buffer[orig(this.size)] >= orig(this.buffer[this.size])
===========================================================================
org.apache.commons.lang.text.StrBuilder.appendNewLine():::ENTER
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == this.buffer[this.size]
this.buffer[] elements one of { 0, 35, 45 }
this.buffer[] one of { [45, 45, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [45, 45, 45, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
this.size one of { 3, 4 }
this.nullText == null
size(this.buffer[]) == 35
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == 0
this.buffer[this.size-1] one of { 35, 45 }
===========================================================================
org.apache.commons.lang.text.StrBuilder.appendNewLine():::EXIT430
this.newLine == this.nullText
this.newLine == return.nullText
this.newLine == orig(this.nullText)
this.buffer[] one of { [45, 45, 45, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [45, 45, 45, 35, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
this.newLine == null
this.buffer[this.size-1] == 10
===========================================================================
org.apache.commons.lang.text.StrBuilder.appendNewLine():::EXIT432
size(this.buffer[]) == this.buffer[this.size-1]
size(this.buffer[]) == this.buffer[return.size-1]
size(this.buffer[]) == this.buffer[orig(this.size)]
size(this.buffer[]) == return.buffer[this.size-1]
size(this.buffer[]) == return.buffer[return.size-1]
size(this.buffer[]) == return.buffer[orig(this.size)]
this.buffer has only one value
this.buffer[] == [45, 45, 45, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
this.buffer[] elements one of { 0, 35, 45 }
this.size == 4
this.newLine has only one value
return has only one value
orig(this) has only one value
orig(this.buffer[]) == [45, 45, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
orig(this.buffer[]) elements one of { 0, 45 }
orig(this.size) == 3
this.buffer[orig(this.size)-1] == 45
===========================================================================
org.apache.commons.lang.text.StrBuilder.appendNewLine():::EXIT
this.buffer == return.buffer
this.buffer == orig(this.buffer)
this.buffer[] == return.buffer[]
this.size == return.size
this.newLine == return.newLine
this.newLine == orig(this.newLine)
this.newLine.toString == return.newLine.toString
this.newLine.toString == orig(this.newLine.toString)
this.nullText == return.nullText
this.nullText == orig(this.nullText)
return == orig(this)
size(this.buffer[]) == orig(size(this.buffer[]))
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == return.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == orig(this.buffer[post(org.apache.commons.lang.text.StrBuilder.CAPACITY)])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == orig(this.buffer[post(org.apache.commons.lang.text.StrBuilder.CAPACITY)-1])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == this.buffer[this.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == this.buffer[return.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == return.buffer[this.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == orig(this.buffer[post(this.size)])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == orig(this.buffer[post(this.size)-1])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == return.buffer[return.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == orig(this.buffer[post(return.size)])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == orig(this.buffer[post(return.size)-1])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == orig(this.buffer[this.size])
this.buffer[this.size-1] == this.buffer[orig(this.size)]
this.buffer[this.size-1] == return.buffer[orig(this.size)]
this.buffer[orig(this.size)-1] == orig(this.buffer[this.size-1])
(this.buffer[] == [45, 45, 45, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  <==>  (size(this.buffer[]) == this.buffer[this.size-1])
(this.buffer[] == [45, 45, 45, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  <==>  (this.buffer[this.size-1] == 35)
(this.buffer[] == [45, 45, 45, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  <==>  (this.newLine has only one value)
(this.buffer[] == [45, 45, 45, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(this) has only one value)
(this.buffer[] == [45, 45, 45, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(this.buffer[]) == [45, 45, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
(this.buffer[] == [45, 45, 45, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(this.buffer[]) elements one of { 0, 45 })
(this.buffer[] == [45, 45, 45, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (orig(this.size) == 3)
(this.buffer[] == [45, 45, 45, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (return has only one value)
(this.buffer[] == [45, 45, 45, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (this.buffer has only one value)
(this.buffer[] == [45, 45, 45, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (this.buffer[] elements one of { 0, 35, 45 })
(this.buffer[] == [45, 45, 45, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (this.buffer[orig(this.size)-1] == 45)
(this.buffer[] == [45, 45, 45, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (this.newLine.toString == "#")
(this.buffer[] == [45, 45, 45, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])  ==>  (this.size == 4)
(this.buffer[] one of { [45, 45, 45, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [45, 45, 45, 35, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  <==>  (this.buffer[this.size-1] == 10)
(this.buffer[] one of { [45, 45, 45, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [45, 45, 45, 35, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  <==>  (this.newLine == null)
(this.buffer[] one of { [45, 45, 45, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [45, 45, 45, 35, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (orig(this.buffer[]) elements one of { 0, 35, 45 })
(this.buffer[] one of { [45, 45, 45, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [45, 45, 45, 35, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (orig(this.buffer[]) one of { [45, 45, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [45, 45, 45, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })
(this.buffer[] one of { [45, 45, 45, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [45, 45, 45, 35, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (orig(this.size) one of { 3, 4 })
(this.buffer[] one of { [45, 45, 45, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [45, 45, 45, 35, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (this.buffer[orig(this.size)-1] one of { 35, 45 })
(this.buffer[] one of { [45, 45, 45, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [45, 45, 45, 35, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (this.newLine == this.nullText)
(this.buffer[] one of { [45, 45, 45, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [45, 45, 45, 35, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (this.size one of { 4, 5 })
this.buffer[] one of { [45, 45, 45, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [45, 45, 45, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [45, 45, 45, 35, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
this.size one of { 4, 5 }
this.nullText == null
size(this.buffer[]) == 35
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == 0
this.buffer[this.size-1] one of { 10, 35 }
this.buffer[orig(this.size)-1] one of { 35, 45 }
===========================================================================
org.apache.commons.lang.text.StrBuilder.appendNull():::ENTER
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[])
this.newLine == null
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == 0
this.buffer[this.size] one of { 0, 97, 110 }
org.apache.commons.lang.text.StrBuilder.CAPACITY != this.buffer[this.size]
org.apache.commons.lang.text.StrBuilder.serialVersionUID > this.buffer[this.size]
this.buffer[] elements >= this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
this.size < size(this.buffer[])-1
this.size >= this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
size(this.buffer[])-1 != this.buffer[this.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] <= this.buffer[this.size]
===========================================================================
org.apache.commons.lang.text.StrBuilder.appendNull():::EXIT442
this.buffer[] == orig(this.buffer[])
this.size == orig(this.size)
this.newLine == this.nullText
this.newLine == return.nullText
this.newLine == orig(this.nullText)
this.buffer[] one of { [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 44, 97, 114, 98, 97, 122, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
this.size one of { 0, 3, 4 }
this.buffer[this.size] one of { 0, 97 }
===========================================================================
org.apache.commons.lang.text.StrBuilder.appendNull():::EXIT444
this.nullText != null
this.buffer[this.size] one of { 0, 44 }
this.buffer[this.size-1] one of { 76, 108 }
this.buffer[orig(this.size)] one of { 78, 110 }
orig(this.buffer[post(this.size)-1]) one of { 0, 108 }
orig(this.buffer[this.size]) one of { 0, 110 }
org.apache.commons.lang.text.StrBuilder.CAPACITY < this.buffer[this.size-1]
org.apache.commons.lang.text.StrBuilder.CAPACITY < this.buffer[orig(this.size)]
org.apache.commons.lang.text.StrBuilder.CAPACITY != orig(this.buffer[post(this.size)-1])
org.apache.commons.lang.text.StrBuilder.serialVersionUID > this.buffer[this.size-1]
org.apache.commons.lang.text.StrBuilder.serialVersionUID > orig(this.buffer[post(this.size)-1])
orig(this.buffer[post(this.size)-1]) in this.buffer[]
this.size - orig(this.size) - 4 == 0
this.size > this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
this.size != this.buffer[this.size]
this.size < this.buffer[this.size-1]
this.size < this.buffer[orig(this.size)]
this.size != orig(this.buffer[post(this.size)-1])
this.size != orig(this.buffer[this.size])
orig(this.size) < this.buffer[this.size-1]
orig(this.size) < this.buffer[orig(this.size)]
size(this.buffer[])-1 != orig(this.buffer[post(this.size)-1])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] < this.buffer[this.size-1]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] < this.buffer[orig(this.size)]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] <= orig(this.buffer[post(this.size)-1])
this.buffer[this.size] < this.buffer[this.size-1]
this.buffer[this.size] < this.buffer[orig(this.size)]
this.buffer[this.size] <= orig(this.buffer[post(this.size)-1])
this.buffer[this.size-1] < this.buffer[orig(this.size)]
this.buffer[this.size-1] != orig(this.buffer[this.size])
this.buffer[orig(this.size)] > orig(this.buffer[post(this.size)-1])
orig(this.buffer[post(this.size)-1]) <= orig(this.buffer[this.size])
===========================================================================
org.apache.commons.lang.text.StrBuilder.appendNull():::EXIT
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[])
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(return.buffer[])
this.buffer == return.buffer
this.buffer == orig(this.buffer)
this.buffer[] == return.buffer[]
this.size == return.size
this.newLine == return.newLine
this.newLine == orig(this.newLine)
this.nullText == return.nullText
this.nullText == orig(this.nullText)
this.nullText.toString == return.nullText.toString
this.nullText.toString == orig(this.nullText.toString)
return == orig(this)
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[post(org.apache.commons.lang.text.StrBuilder.CAPACITY)-1])
this.buffer[this.size] == orig(this.buffer[post(this.size)])
this.buffer[this.size] == orig(this.buffer[post(return.size)])
(this.nullText != null)  <==>  (this.buffer[orig(this.size)] one of { 78, 110 })
(this.nullText != null)  <==>  (this.buffer[this.size] < this.buffer[orig(this.size)])
(this.nullText != null)  ==>  (org.apache.commons.lang.text.StrBuilder.CAPACITY != orig(this.buffer[post(return.size)-1]))
(this.nullText != null)  ==>  (org.apache.commons.lang.text.StrBuilder.CAPACITY != orig(this.buffer[post(this.size)-1]))
(this.nullText != null)  ==>  (org.apache.commons.lang.text.StrBuilder.CAPACITY < return.buffer[return.size-1])
(this.nullText != null)  ==>  (org.apache.commons.lang.text.StrBuilder.CAPACITY < return.buffer[this.size-1])
(this.nullText != null)  ==>  (org.apache.commons.lang.text.StrBuilder.CAPACITY < this.buffer[orig(this.size)])
(this.nullText != null)  ==>  (org.apache.commons.lang.text.StrBuilder.CAPACITY < this.buffer[return.size-1])
(this.nullText != null)  ==>  (org.apache.commons.lang.text.StrBuilder.CAPACITY < this.buffer[this.size-1])
(this.nullText != null)  ==>  (org.apache.commons.lang.text.StrBuilder.serialVersionUID > orig(this.buffer[post(return.size)-1]))
(this.nullText != null)  ==>  (org.apache.commons.lang.text.StrBuilder.serialVersionUID > orig(this.buffer[post(this.size)-1]))
(this.nullText != null)  ==>  (org.apache.commons.lang.text.StrBuilder.serialVersionUID > return.buffer[return.size-1])
(this.nullText != null)  ==>  (org.apache.commons.lang.text.StrBuilder.serialVersionUID > return.buffer[this.size-1])
(this.nullText != null)  ==>  (org.apache.commons.lang.text.StrBuilder.serialVersionUID > this.buffer[return.size-1])
(this.nullText != null)  ==>  (org.apache.commons.lang.text.StrBuilder.serialVersionUID > this.buffer[this.size-1])
(this.nullText != null)  ==>  (orig(this.buffer[post(return.size)-1]) <= orig(this.buffer[this.size]))
(this.nullText != null)  ==>  (orig(this.buffer[post(return.size)-1]) in this.buffer[])
(this.nullText != null)  ==>  (orig(this.buffer[post(return.size)-1]) one of { 0, 108 })
(this.nullText != null)  ==>  (orig(this.buffer[post(this.size)-1]) <= orig(this.buffer[this.size]))
(this.nullText != null)  ==>  (orig(this.buffer[post(this.size)-1]) in this.buffer[])
(this.nullText != null)  ==>  (orig(this.buffer[post(this.size)-1]) one of { 0, 108 })
(this.nullText != null)  ==>  (orig(this.buffer[this.size]) one of { 0, 110 })
(this.nullText != null)  ==>  (orig(this.size) < return.buffer[return.size-1])
(this.nullText != null)  ==>  (orig(this.size) < return.buffer[this.size-1])
(this.nullText != null)  ==>  (orig(this.size) < this.buffer[orig(this.size)])
(this.nullText != null)  ==>  (orig(this.size) < this.buffer[return.size-1])
(this.nullText != null)  ==>  (orig(this.size) < this.buffer[this.size-1])
(this.nullText != null)  ==>  (return.buffer[return.size-1] != orig(this.buffer[this.size]))
(this.nullText != null)  ==>  (return.buffer[return.size-1] one of { 76, 108 })
(this.nullText != null)  ==>  (return.buffer[this.size-1] != orig(this.buffer[this.size]))
(this.nullText != null)  ==>  (return.buffer[this.size-1] one of { 76, 108 })
(this.nullText != null)  ==>  (size(this.buffer[])-1 != orig(this.buffer[post(return.size)-1]))
(this.nullText != null)  ==>  (size(this.buffer[])-1 != orig(this.buffer[post(this.size)-1]))
(this.nullText != null)  ==>  (this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] < return.buffer[return.size-1])
(this.nullText != null)  ==>  (this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] < return.buffer[this.size-1])
(this.nullText != null)  ==>  (this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] < this.buffer[orig(this.size)])
(this.nullText != null)  ==>  (this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] < this.buffer[return.size-1])
(this.nullText != null)  ==>  (this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] < this.buffer[this.size-1])
(this.nullText != null)  ==>  (this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] <= orig(this.buffer[post(return.size)-1]))
(this.nullText != null)  ==>  (this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] <= orig(this.buffer[post(this.size)-1]))
(this.nullText != null)  ==>  (this.buffer[orig(this.size)] > orig(this.buffer[post(return.size)-1]))
(this.nullText != null)  ==>  (this.buffer[orig(this.size)] > orig(this.buffer[post(this.size)-1]))
(this.nullText != null)  ==>  (this.buffer[orig(this.size)] > return.buffer[return.size-1])
(this.nullText != null)  ==>  (this.buffer[orig(this.size)] > return.buffer[this.size-1])
(this.nullText != null)  ==>  (this.buffer[return.size-1] != orig(this.buffer[this.size]))
(this.nullText != null)  ==>  (this.buffer[return.size-1] < this.buffer[orig(this.size)])
(this.nullText != null)  ==>  (this.buffer[return.size-1] one of { 76, 108 })
(this.nullText != null)  ==>  (this.buffer[this.size-1] != orig(this.buffer[this.size]))
(this.nullText != null)  ==>  (this.buffer[this.size-1] < this.buffer[orig(this.size)])
(this.nullText != null)  ==>  (this.buffer[this.size-1] one of { 76, 108 })
(this.nullText != null)  ==>  (this.buffer[this.size] < return.buffer[return.size-1])
(this.nullText != null)  ==>  (this.buffer[this.size] < return.buffer[this.size-1])
(this.nullText != null)  ==>  (this.buffer[this.size] < this.buffer[return.size-1])
(this.nullText != null)  ==>  (this.buffer[this.size] < this.buffer[this.size-1])
(this.nullText != null)  ==>  (this.buffer[this.size] <= orig(this.buffer[post(return.size)-1]))
(this.nullText != null)  ==>  (this.buffer[this.size] <= orig(this.buffer[post(this.size)-1]))
(this.nullText != null)  ==>  (this.buffer[this.size] one of { 0, 44 })
(this.nullText != null)  ==>  (this.nullText.toString one of { "NULL", "null" })
(this.nullText != null)  ==>  (this.size != orig(this.buffer[post(return.size)-1]))
(this.nullText != null)  ==>  (this.size != orig(this.buffer[post(this.size)-1]))
(this.nullText != null)  ==>  (this.size != orig(this.buffer[this.size]))
(this.nullText != null)  ==>  (this.size != this.buffer[this.size])
(this.nullText != null)  ==>  (this.size - orig(this.size) - 4 == 0)
(this.nullText != null)  ==>  (this.size < return.buffer[return.size-1])
(this.nullText != null)  ==>  (this.size < return.buffer[this.size-1])
(this.nullText != null)  ==>  (this.size < this.buffer[orig(this.size)])
(this.nullText != null)  ==>  (this.size < this.buffer[return.size-1])
(this.nullText != null)  ==>  (this.size < this.buffer[this.size-1])
(this.nullText != null)  ==>  (this.size > this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1])
(this.nullText == null)  <==>  (this.buffer[orig(this.size)] one of { 0, 97 })
(this.nullText == null)  <==>  (this.size == orig(this.size))
(this.nullText == null)  ==>  (orig(this.buffer[]) one of { [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 44, 97, 114, 98, 97, 122, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })
(this.nullText == null)  ==>  (orig(this.buffer[this.size]) one of { 0, 97 })
(this.nullText == null)  ==>  (orig(this.size) one of { 0, 3, 4 })
(this.nullText == null)  ==>  (this.buffer[] == orig(this.buffer[]))
(this.nullText == null)  ==>  (this.buffer[] one of { [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 44, 97, 114, 98, 97, 122, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })
(this.nullText == null)  ==>  (this.buffer[this.size] one of { 0, 97 })
(this.nullText == null)  ==>  (this.newLine == this.nullText)
(this.nullText == null)  ==>  (this.size one of { 0, 3, 4 })
this.newLine == null
return != null
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == 0
this.buffer[this.size] one of { 0, 44, 97 }
org.apache.commons.lang.text.StrBuilder.CAPACITY != this.buffer[this.size]
org.apache.commons.lang.text.StrBuilder.CAPACITY != this.buffer[orig(this.size)]
org.apache.commons.lang.text.StrBuilder.serialVersionUID > this.buffer[this.size]
org.apache.commons.lang.text.StrBuilder.serialVersionUID > this.buffer[orig(this.size)]
this.buffer[] >= orig(this.buffer[]) (elementwise)
this.buffer[] elements >= this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
orig(this.buffer[this.size]) in this.buffer[]
this.size >= orig(this.size)
this.size < size(this.buffer[])-1
this.size >= this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
orig(this.buffer[]) elements >= this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
orig(this.size) < size(this.buffer[])-1
orig(this.size) >= this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
size(this.buffer[])-1 != this.buffer[this.size]
size(this.buffer[])-1 != this.buffer[orig(this.size)]
size(this.buffer[])-1 != orig(this.buffer[this.size])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] <= this.buffer[this.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] <= this.buffer[orig(this.size)]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] <= orig(this.buffer[this.size])
this.buffer[this.size] <= this.buffer[orig(this.size)]
this.buffer[this.size] <= orig(this.buffer[this.size])
===========================================================================
org.apache.commons.lang.text.StrBuilder.appendPadding(int, char):::ENTER
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[])
this.newLine == this.nullText
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == this.buffer[this.size]
this has only one value
this.buffer has only one value
this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
this.size one of { 3, 4 }
this.newLine == null
padChar == 45
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == 0
this.buffer[this.size-1] one of { 45, 111 }
===========================================================================
org.apache.commons.lang.text.StrBuilder.appendPadding(int, char):::EXIT
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[])
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(return.buffer[])
this.buffer == return.buffer
this.buffer == orig(this.buffer)
this.buffer[] == return.buffer[]
this.size == return.size
this.newLine == this.nullText
this.newLine == return.newLine
this.newLine == return.nullText
this.newLine == orig(this.newLine)
this.newLine == orig(this.nullText)
return == orig(this)
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[post(org.apache.commons.lang.text.StrBuilder.CAPACITY)-1])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == this.buffer[this.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == this.buffer[return.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == return.buffer[this.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[post(this.size)])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == return.buffer[return.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[post(return.size)])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == orig(this.buffer[this.size])
this.buffer[orig(this.size)-1] == orig(this.buffer[this.size-1])
this.buffer has only one value
this.buffer[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
this.size one of { 3, 4, 20 }
this.newLine == null
return has only one value
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == 0
this.buffer[this.size-1] one of { 45, 111 }
this.buffer[orig(this.size)] one of { 0, 45 }
this.buffer[orig(this.size)-1] one of { 45, 111 }
orig(this.buffer[post(this.size)-1]) one of { 0, 111 }
orig(this.buffer[post(this.size)-1]) in this.buffer[]
===========================================================================
org.apache.commons.lang.text.StrBuilder.appendWithSeparators(java.lang.Object[], java.lang.String):::ENTER
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[])
this.size == this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
this.buffer[] one of { [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 44, 98, 97, 114, 44, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 98, 97, 122, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
this.size == 0
this.newLine == null
this.nullText.toString == "null"
array.getClass().getName() == java.lang.Object[].class
separator.toString == ","
size(array[]) one of { 0, 3 }
this.buffer[this.size] one of { 0, 102 }
===========================================================================
org.apache.commons.lang.text.StrBuilder.appendWithSeparators(java.lang.Object[], java.lang.String):::EXIT
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[])
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(return.buffer[])
this.buffer == return.buffer
this.buffer == orig(this.buffer)
this.buffer[] == return.buffer[]
this.size == return.size
this.newLine == return.newLine
this.newLine == orig(this.newLine)
this.nullText == return.nullText
this.nullText == orig(this.nullText)
array[] == orig(array[])
return == orig(this)
orig(this.size) == this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
orig(this.size) == return.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
this.buffer[this.size] == orig(this.buffer[post(this.size)])
this.buffer[this.size] == orig(this.buffer[post(return.size)])
this.newLine == null
this.nullText.toString == "null"
this.buffer[this.size] one of { 0, 97, 122 }
this.buffer[orig(this.size)] one of { 0, 102 }
orig(this.buffer[this.size]) in this.buffer[]
===========================================================================
org.apache.commons.lang.text.StrBuilder.appendWithSeparators(java.util.Collection, java.lang.String):::ENTER
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[])
this.size == this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
this.size == 0
this.newLine == null
this.nullText.toString == "null"
separator.toString == ","
this.buffer[this.size] one of { 0, 102 }
===========================================================================
org.apache.commons.lang.text.StrBuilder.appendWithSeparators(java.util.Collection, java.lang.String):::EXIT
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[])
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(return.buffer[])
this.buffer == return.buffer
this.buffer == orig(this.buffer)
this.buffer[] == return.buffer[]
this.size == return.size
this.newLine == return.newLine
this.newLine == orig(this.newLine)
this.nullText == return.nullText
this.nullText == orig(this.nullText)
return == orig(this)
orig(this.size) == this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
orig(this.size) == return.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
this.buffer[this.size] == orig(this.buffer[post(this.size)])
this.buffer[this.size] == orig(this.buffer[post(return.size)])
this.newLine == null
this.nullText.toString == "null"
this.buffer[this.size] one of { 0, 97, 122 }
this.buffer[orig(this.size)] one of { 0, 102 }
orig(this.buffer[this.size]) in this.buffer[]
===========================================================================
org.apache.commons.lang.text.StrBuilder.appendWithSeparators(java.util.Iterator, java.lang.String):::ENTER
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[])
this.size == this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
this.newLine == this.nullText
this has only one value
this.buffer has only one value
this.buffer[] one of { [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 44, 98, 97, 114, 44, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 98, 97, 122, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
this.size == 0
this.newLine == null
separator.toString == ","
this.buffer[this.size] one of { 0, 102 }
===========================================================================
org.apache.commons.lang.text.StrBuilder.appendWithSeparators(java.util.Iterator, java.lang.String):::EXIT
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[])
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(return.buffer[])
this.buffer == return.buffer
this.buffer == orig(this.buffer)
this.buffer[] == return.buffer[]
this.size == return.size
this.newLine == this.nullText
this.newLine == return.newLine
this.newLine == return.nullText
this.newLine == orig(this.newLine)
this.newLine == orig(this.nullText)
return == orig(this)
orig(this.size) == this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
orig(this.size) == return.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
this.buffer[this.size] == orig(this.buffer[post(this.size)])
this.buffer[this.size] == orig(this.buffer[post(return.size)])
this.buffer has only one value
this.newLine == null
return has only one value
this.buffer[this.size] one of { 0, 97, 122 }
this.buffer[orig(this.size)] one of { 0, 102 }
orig(this.buffer[this.size]) in this.buffer[]
===========================================================================
org.apache.commons.lang.text.StrBuilder.clear():::ENTER
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[])
this.newLine == null
this.nullText.toString == "null"
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == 0
org.apache.commons.lang.text.StrBuilder.CAPACITY != this.buffer[this.size]
org.apache.commons.lang.text.StrBuilder.serialVersionUID > this.buffer[this.size]
this.buffer[] elements >= this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
this.size < size(this.buffer[])-1
this.size >= this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
size(this.buffer[])-1 != this.buffer[this.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] <= this.buffer[this.size]
===========================================================================
org.apache.commons.lang.text.StrBuilder.clear():::EXIT
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[])
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(return.buffer[])
this.buffer == return.buffer
this.buffer == orig(this.buffer)
this.buffer[] == return.buffer[]
this.buffer[] == orig(this.buffer[])
this.size == return.size
this.size == this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
this.size == return.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
this.size == orig(this.buffer[post(org.apache.commons.lang.text.StrBuilder.CAPACITY)-1])
this.newLine == return.newLine
this.newLine == orig(this.newLine)
this.nullText == return.nullText
this.nullText == orig(this.nullText)
this.nullText.toString == return.nullText.toString
this.nullText.toString == orig(this.nullText.toString)
return == orig(this)
this.size == 0
this.newLine == null
this.nullText.toString == "null"
return != null
org.apache.commons.lang.text.StrBuilder.CAPACITY != this.buffer[this.size]
org.apache.commons.lang.text.StrBuilder.CAPACITY != this.buffer[orig(this.size)]
org.apache.commons.lang.text.StrBuilder.serialVersionUID > this.buffer[this.size]
org.apache.commons.lang.text.StrBuilder.serialVersionUID > this.buffer[orig(this.size)]
this.buffer[] elements >= this.size
this.size <= orig(this.size)
this.size <= this.buffer[this.size]
this.size <= this.buffer[orig(this.size)]
orig(this.size) < size(this.buffer[])-1
orig(this.size) <= this.buffer[this.size]
size(this.buffer[])-1 != this.buffer[this.size]
size(this.buffer[])-1 != this.buffer[orig(this.size)]
===========================================================================
org.apache.commons.lang.text.StrBuilder.ensureCapacity(int):::ENTER
capacity >= 1
org.apache.commons.lang.text.StrBuilder.CAPACITY > capacity
org.apache.commons.lang.text.StrBuilder.CAPACITY != this.buffer[this.size]
org.apache.commons.lang.text.StrBuilder.CAPACITY != this.buffer[capacity-1]
org.apache.commons.lang.text.StrBuilder.serialVersionUID > capacity
org.apache.commons.lang.text.StrBuilder.serialVersionUID > this.buffer[this.size]
org.apache.commons.lang.text.StrBuilder.serialVersionUID > this.buffer[capacity-1]
this.size <= capacity
this.size <= size(this.buffer[])-1
capacity <= size(this.buffer[])
capacity != size(this.buffer[])-1
capacity != this.buffer[this.size]
capacity != this.buffer[capacity-1]
size(this.buffer[]) != this.buffer[this.size]
size(this.buffer[]) != this.buffer[capacity-1]
===========================================================================
org.apache.commons.lang.text.StrBuilder.ensureCapacity(int):::EXIT
this.buffer == return.buffer
this.buffer == orig(this.buffer)
this.buffer[] == return.buffer[]
this.buffer[] == orig(this.buffer[])
this.size == return.size
this.size == orig(this.size)
this.newLine == return.newLine
this.newLine == orig(this.newLine)
this.newLine.toString == return.newLine.toString
this.newLine.toString == orig(this.newLine.toString)
this.nullText == return.nullText
this.nullText == orig(this.nullText)
this.nullText.toString == return.nullText.toString
this.nullText.toString == orig(this.nullText.toString)
return == orig(this)
return != null
org.apache.commons.lang.text.StrBuilder.CAPACITY != this.buffer[this.size]
org.apache.commons.lang.text.StrBuilder.CAPACITY != this.buffer[orig(capacity)-1]
org.apache.commons.lang.text.StrBuilder.serialVersionUID > this.buffer[this.size]
org.apache.commons.lang.text.StrBuilder.serialVersionUID > this.buffer[orig(capacity)-1]
this.size <= orig(capacity)
this.size <= size(this.buffer[])-1
orig(capacity) <= size(this.buffer[])
orig(capacity) != size(this.buffer[])-1
orig(capacity) != this.buffer[this.size]
orig(capacity) != this.buffer[orig(capacity)-1]
size(this.buffer[]) != this.buffer[this.size]
size(this.buffer[]) != this.buffer[orig(capacity)-1]
===========================================================================
org.apache.commons.lang.text.StrBuilder.getChars(int, int, char[], int):::ENTER
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(destination[])
this.newLine == this.nullText
startIndex == destinationIndex
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == destination[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == this.buffer[this.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == destination[this.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == destination[this.size-1]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == destination[startIndex]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == destination[endIndex]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == destination[endIndex-1]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == destination[destinationIndex]
this.buffer[] one of { [97, 98, 99, 98, 97, 114, 100, 101, 102, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
this.size one of { 3, 9 }
this.newLine == null
startIndex one of { 0, 3 }
endIndex one of { 3, 6 }
destination has only one value
destination[] elements one of { 0, 102, 111 }
destination[] one of { [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
size(this.buffer[]) one of { 35, 41 }
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == 0
this.buffer[this.size-1] one of { 102, 111 }
this.buffer[startIndex] one of { 98, 102 }
this.buffer[endIndex] one of { 0, 100 }
this.buffer[endIndex-1] one of { 111, 114 }
===========================================================================
org.apache.commons.lang.text.StrBuilder.getChars(int, int, char[], int):::EXIT
this.buffer == orig(this.buffer)
this.buffer[] == orig(this.buffer[])
this.size == orig(this.size)
this.newLine == this.nullText
this.newLine == orig(this.newLine)
this.newLine == orig(this.nullText)
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == destination[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == orig(this.buffer[post(org.apache.commons.lang.text.StrBuilder.CAPACITY)-1])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == orig(destination[post(org.apache.commons.lang.text.StrBuilder.CAPACITY)-1])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == this.buffer[this.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == this.buffer[orig(this.size)]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == destination[this.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == orig(this.buffer[post(this.size)])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == orig(destination[post(this.size)])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == orig(destination[post(this.size)-1])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == orig(destination[post(startIndex)])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == orig(destination[post(endIndex)])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == orig(destination[post(endIndex)-1])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == destination[orig(this.size)]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == destination[orig(endIndex)]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == orig(destination[post(destinationIndex)])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == orig(this.buffer[this.size])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == orig(destination[this.size])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == orig(destination[this.size-1])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == orig(destination[startIndex])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == orig(destination[endIndex])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == orig(destination[endIndex-1])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == orig(destination[destinationIndex])
this.buffer[orig(startIndex)] == destination[orig(startIndex)]
this.buffer[orig(endIndex)-1] == destination[orig(endIndex)-1]
this.buffer[orig(destinationIndex)] == destination[orig(startIndex)]
orig(this.buffer[post(startIndex)]) == destination[orig(startIndex)]
orig(this.buffer[post(endIndex)-1]) == destination[orig(endIndex)-1]
destination[orig(startIndex)] == orig(this.buffer[post(destinationIndex)])
destination[orig(startIndex)] == orig(this.buffer[startIndex])
destination[orig(startIndex)] == orig(this.buffer[destinationIndex])
destination[orig(endIndex)-1] == orig(this.buffer[endIndex-1])
this.buffer[] one of { [97, 98, 99, 98, 97, 114, 100, 101, 102, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
this.size one of { 3, 9 }
this.newLine == null
destination[] one of { [102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
destination[] elements >= 0
size(this.buffer[]) one of { 35, 41 }
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == 0
this.buffer[this.size-1] one of { 102, 111 }
this.buffer[orig(endIndex)] one of { 0, 100 }
destination[this.size-1] one of { 0, 111 }
destination[orig(startIndex)] one of { 98, 102 }
destination[orig(endIndex)-1] one of { 111, 114 }
destination[this.size-1] in this.buffer[]
this.buffer[this.size-1] in destination[]
===========================================================================
org.apache.commons.lang.text.StrBuilder.getNullText():::ENTER
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[])
this.size == this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
this.buffer[] one of { [45, 45, 45, 45, 45, 45, 45, 102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 45, 45, 45, 45, 45, 45, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
this.size == 0
this.newLine == null
this.nullText has only one value
this.nullText.toString == "null"
this.buffer[this.size] one of { 45, 102 }
===========================================================================
org.apache.commons.lang.text.StrBuilder.getNullText():::EXIT
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[])
this.buffer == orig(this.buffer)
this.buffer[] == orig(this.buffer[])
this.size == orig(this.size)
this.size == this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
this.size == orig(this.buffer[post(org.apache.commons.lang.text.StrBuilder.CAPACITY)-1])
this.newLine == orig(this.newLine)
this.nullText == return
this.nullText.toString == return.toString
return == orig(this.nullText)
return.toString == orig(this.nullText.toString)
this.buffer[] one of { [45, 45, 45, 45, 45, 45, 45, 102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 45, 45, 45, 45, 45, 45, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
this.size == 0
this.newLine == null
return has only one value
return.toString == "null"
this.buffer[this.size] one of { 45, 102 }
===========================================================================
org.apache.commons.lang.text.StrBuilder.insert(int, boolean):::ENTER
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[])
this.newLine == this.nullText
index == this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
this has only one value
this.buffer has only one value
this.buffer[] one of { [98, 97, 114, 98, 97, 122, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [116, 114, 117, 101, 98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
this.size one of { 6, 10 }
this.newLine == null
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == 0
this.buffer[this.size] one of { 0, 98 }
this.buffer[this.size-1] == 122
this.buffer[index] one of { 98, 116 }
===========================================================================
org.apache.commons.lang.text.StrBuilder.insert(int, boolean):::EXIT
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[])
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(return.buffer[])
this.buffer == return.buffer
this.buffer == orig(this.buffer)
this.buffer[] == return.buffer[]
this.size == return.size
this.newLine == this.nullText
this.newLine == return.newLine
this.newLine == return.nullText
this.newLine == orig(this.newLine)
this.newLine == orig(this.nullText)
return == orig(this)
orig(index) == this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
orig(index) == return.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
orig(index) == this.buffer[this.size]
orig(index) == this.buffer[return.size]
orig(index) == return.buffer[this.size]
orig(index) == orig(this.buffer[post(this.size)])
orig(index) == orig(this.buffer[post(this.size)-1])
orig(index) == return.buffer[return.size]
orig(index) == orig(this.buffer[post(return.size)])
orig(index) == orig(this.buffer[post(return.size)-1])
this.buffer[this.size-1] == orig(this.buffer[this.size-1])
this.buffer has only one value
this.buffer[] one of { [102, 97, 108, 115, 101, 116, 114, 117, 101, 98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [116, 114, 117, 101, 98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
this.size one of { 10, 15 }
this.newLine == null
return has only one value
orig(index) == 0
this.buffer[this.size-1] == 122
this.buffer[orig(this.size)] one of { 97, 114 }
this.buffer[orig(this.size)-1] one of { 97, 98 }
this.buffer[orig(index)] one of { 102, 116 }
orig(this.buffer[post(index)]) == 98
orig(this.buffer[post(index)-1]) one of { 101, 114 }
orig(this.buffer[post(index)]) in this.buffer[]
orig(this.buffer[post(index)-1]) in this.buffer[]
orig(this.buffer[this.size]) in this.buffer[]
orig(this.buffer[index]) in this.buffer[]
this.buffer[orig(this.size)] in orig(this.buffer[])
this.buffer[orig(this.size)-1] in orig(this.buffer[])
===========================================================================
org.apache.commons.lang.text.StrBuilder.insert(int, char):::ENTER
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[])
this.newLine == this.nullText
index == this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
this has only one value
this.buffer has only one value
this.buffer[] one of { [98, 97, 114, 98, 97, 122, 114, 117, 101, 98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [98, 97, 114, 98, 97, 122, 122, 117, 101, 98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
this.size == 6
this.newLine == null
value one of { 33, 48 }
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == 0
this.buffer[this.size] one of { 114, 122 }
this.buffer[this.size-1] == 122
this.buffer[index] == 98
===========================================================================
org.apache.commons.lang.text.StrBuilder.insert(int, char):::EXIT
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[])
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(return.buffer[])
this.buffer == return.buffer
this.buffer == orig(this.buffer)
this.buffer[] == return.buffer[]
this.size == return.size
this.newLine == this.nullText
this.newLine == return.newLine
this.newLine == return.nullText
this.newLine == orig(this.newLine)
this.newLine == orig(this.nullText)
return == orig(this)
orig(index) == this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
orig(index) == return.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
orig(value) == this.buffer[orig(index)]
orig(value) == return.buffer[orig(index)]
this.buffer[this.size] == orig(this.buffer[post(this.size)])
this.buffer[this.size] == orig(this.buffer[post(return.size)])
this.buffer[this.size-1] == this.buffer[orig(this.size)]
this.buffer[this.size-1] == return.buffer[orig(this.size)]
this.buffer[this.size-1] == orig(this.buffer[this.size-1])
orig(this.buffer[post(this.size)-1]) == orig(this.buffer[this.size])
orig(this.buffer[post(return.size)-1]) == orig(this.buffer[this.size])
this.buffer has only one value
this.buffer[] one of { [33, 98, 97, 114, 98, 97, 122, 117, 101, 98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [48, 98, 97, 114, 98, 97, 122, 117, 101, 98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
this.size == 7
this.newLine == null
return has only one value
orig(index) == 0
this.buffer[this.size] == 117
this.buffer[this.size-1] == 122
this.buffer[orig(this.size)-1] == 97
orig(this.buffer[this.size]) in this.buffer[]
orig(this.buffer[index]) in this.buffer[]
this.buffer[orig(this.size)-1] in orig(this.buffer[])
===========================================================================
org.apache.commons.lang.text.StrBuilder.insert(int, char[]):::ENTER
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[])
index == this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
this.buffer[] one of { [98, 97, 114, 98, 97, 122, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 110, 117, 108, 108, 98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
this.size one of { 6, 13 }
this.newLine == null
this.nullText.toString == "null"
chars[] elements one of { 102, 111 }
chars[] one of { [], [102, 111, 111] }
size(chars[]) one of { 0, 3 }
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == 0
this.buffer[this.size] one of { 0, 98 }
this.buffer[this.size-1] == 122
this.buffer[index] one of { 98, 102 }
===========================================================================
org.apache.commons.lang.text.StrBuilder.insert(int, char[]):::EXIT967
this.buffer[this.size] == orig(this.buffer[this.size])
this.buffer[] one of { [98, 97, 114, 98, 97, 122, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [110, 117, 108, 108, 102, 111, 111, 110, 117, 108, 108, 98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
this.size one of { 6, 17 }
orig(chars) == null
this.buffer[orig(this.size)-1] one of { 97, 122 }
this.buffer[orig(index)] one of { 98, 110 }
this.buffer[orig(index)] in orig(this.buffer[])
===========================================================================
org.apache.commons.lang.text.StrBuilder.insert(int, char[]):::EXIT976
this.newLine == this.nullText
this.newLine == return.nullText
this.newLine == orig(this.nullText)
this.buffer[this.size-1] == orig(this.buffer[post(this.size)-1])
this.buffer[this.size-1] == orig(this.buffer[post(return.size)-1])
this.buffer[orig(this.size)] == orig(this.buffer[index])
return.buffer[orig(this.size)] == orig(this.buffer[index])
orig(this.buffer[this.size]) == orig(this.buffer[index])
this.buffer has only one value
this.buffer[] one of { [98, 97, 114, 98, 97, 122, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
this.size one of { 6, 9 }
return has only one value
orig(this) has only one value
orig(this.buffer[]) == [98, 97, 114, 98, 97, 122, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
orig(this.size) == 6
this.buffer[orig(this.size)-1] one of { 114, 122 }
this.buffer[orig(index)] one of { 98, 102 }
orig(this.buffer[index]) == 98
===========================================================================
org.apache.commons.lang.text.StrBuilder.insert(int, char[]):::EXIT
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[])
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(return.buffer[])
this.buffer == return.buffer
this.buffer == orig(this.buffer)
this.buffer[] == return.buffer[]
this.size == return.size
this.newLine == return.newLine
this.newLine == orig(this.newLine)
this.nullText == return.nullText
this.nullText == orig(this.nullText)
chars[] == orig(chars[])
return == orig(this)
orig(index) == this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
orig(index) == return.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
this.buffer[this.size] == orig(this.buffer[post(this.size)])
this.buffer[this.size] == orig(this.buffer[post(return.size)])
this.buffer[this.size-1] == orig(this.buffer[this.size-1])
(orig(chars) == null)  ==>  (orig(this.buffer[]) one of { [98, 97, 114, 98, 97, 122, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 110, 117, 108, 108, 98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })
(orig(chars) == null)  ==>  (orig(this.buffer[index]) one of { 98, 102 })
(orig(chars) == null)  ==>  (orig(this.buffer[post(this.size)-1]) one of { 0, 122 })
(orig(chars) == null)  ==>  (orig(this.buffer[this.size]) one of { 0, 98 })
(orig(chars) == null)  ==>  (orig(this.size) one of { 6, 13 })
(orig(chars) == null)  ==>  (this.buffer[] one of { [98, 97, 114, 98, 97, 122, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [110, 117, 108, 108, 102, 111, 111, 110, 117, 108, 108, 98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })
(orig(chars) == null)  ==>  (this.buffer[orig(index)] in orig(this.buffer[]))
(orig(chars) == null)  ==>  (this.buffer[orig(index)] one of { 98, 110 })
(orig(chars) == null)  ==>  (this.buffer[orig(this.size)-1] one of { 97, 122 })
(orig(chars) == null)  ==>  (this.buffer[orig(this.size)] one of { 98, 114 })
(orig(chars) == null)  ==>  (this.buffer[this.size] == orig(this.buffer[this.size]))
(orig(chars) == null)  ==>  (this.nullText.toString == "null")
(orig(chars) == null)  ==>  (this.size one of { 6, 17 })
this.buffer[] one of { [98, 97, 114, 98, 97, 122, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [110, 117, 108, 108, 102, 111, 111, 110, 117, 108, 108, 98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
this.size one of { 6, 9, 17 }
this.newLine == null
this.nullText.toString == "null"
chars[] elements one of { 102, 111 }
chars[] one of { [], [102, 111, 111] }
orig(index) == 0
this.buffer[this.size] one of { 0, 98 }
this.buffer[this.size-1] == 122
this.buffer[orig(this.size)] one of { 98, 114 }
this.buffer[orig(this.size)-1] one of { 97, 114, 122 }
this.buffer[orig(index)] one of { 98, 102, 110 }
orig(this.buffer[post(this.size)-1]) one of { 0, 122 }
orig(this.buffer[post(this.size)-1]) in this.buffer[]
orig(this.buffer[this.size]) in this.buffer[]
orig(this.buffer[index]) in this.buffer[]
this.buffer[orig(this.size)] in orig(this.buffer[])
this.buffer[orig(this.size)-1] in orig(this.buffer[])
===========================================================================
org.apache.commons.lang.text.StrBuilder.insert(int, char[], int, int):::ENTER
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[])
index == this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
offset == length
this.buffer[index] == this.buffer[offset]
this.buffer[index] == this.buffer[length]
this.buffer[] one of { [98, 97, 114, 98, 97, 122, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [110, 117, 108, 108, 102, 111, 111, 110, 117, 108, 108, 98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
this.size one of { 6, 17 }
this.newLine == null
this.nullText.toString == "null"
chars[] one of { [], [97, 98, 99, 102, 111, 111, 100, 101, 102] }
offset one of { 0, 3 }
size(chars[]) one of { 0, 9 }
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == 0
this.buffer[this.size] one of { 0, 98 }
this.buffer[this.size-1] == 122
this.buffer[index] one of { 98, 110 }
===========================================================================
org.apache.commons.lang.text.StrBuilder.insert(int, char[], int, int):::EXIT1007
this.newLine == this.nullText
this.newLine == return.nullText
this.newLine == orig(this.nullText)
this.buffer[this.size-1] == orig(this.buffer[post(this.size)-1])
this.buffer[this.size-1] == orig(this.buffer[post(return.size)-1])
this.buffer[orig(this.size)] == this.buffer[orig(offset)]
this.buffer[orig(offset)] == return.buffer[orig(this.size)]
this.buffer[orig(offset)] == orig(this.buffer[this.size])
this.buffer has only one value
this.buffer[] one of { [98, 97, 114, 98, 97, 122, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
this.size one of { 6, 9 }
return has only one value
orig(this) has only one value
orig(this.buffer[]) == [98, 97, 114, 98, 97, 122, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
orig(this.size) == 6
this.buffer[orig(this.size)-1] one of { 114, 122 }
this.buffer[orig(index)] one of { 98, 102 }
this.buffer[orig(offset)] == 98
===========================================================================
org.apache.commons.lang.text.StrBuilder.insert(int, char[], int, int):::EXIT993
orig(index) == orig(offset)
orig(index) == orig(length)
this.buffer[this.size] == orig(this.buffer[this.size])
this.buffer[orig(index)] == orig(this.buffer[post(index)])
this.buffer[orig(index)] == orig(this.buffer[post(offset)])
this.buffer[orig(index)] == orig(this.buffer[post(length)])
this.buffer[orig(index)] == orig(this.buffer[index])
this.buffer[orig(index)] == orig(this.buffer[offset])
this.buffer[orig(index)] == orig(this.buffer[length])
this.buffer[] one of { [98, 97, 114, 98, 97, 122, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [110, 117, 108, 108, 110, 117, 108, 108, 102, 111, 111, 110, 117, 108, 108, 98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
this.size one of { 6, 21 }
orig(chars) == null
this.buffer[orig(this.size)-1] one of { 97, 122 }
this.buffer[orig(index)] one of { 98, 110 }
===========================================================================
org.apache.commons.lang.text.StrBuilder.insert(int, char[], int, int):::EXIT
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[])
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(return.buffer[])
this.buffer == return.buffer
this.buffer == orig(this.buffer)
this.buffer[] == return.buffer[]
this.size == return.size
this.newLine == return.newLine
this.newLine == orig(this.newLine)
this.nullText == return.nullText
this.nullText == orig(this.nullText)
chars[] == orig(chars[])
return == orig(this)
orig(index) == this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
orig(index) == return.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
this.buffer[this.size] == orig(this.buffer[post(this.size)])
this.buffer[this.size] == orig(this.buffer[post(return.size)])
this.buffer[this.size-1] == orig(this.buffer[this.size-1])
this.buffer[orig(offset)] == orig(this.buffer[post(index)])
this.buffer[orig(offset)] == orig(this.buffer[post(offset)])
this.buffer[orig(offset)] == orig(this.buffer[post(length)])
this.buffer[orig(offset)] == orig(this.buffer[index])
this.buffer[orig(offset)] == orig(this.buffer[offset])
this.buffer[orig(offset)] == orig(this.buffer[length])
(orig(chars) == null)  ==>  (orig(index) == orig(offset))
(orig(chars) == null)  ==>  (orig(offset) == 0)
(orig(chars) == null)  ==>  (orig(this.buffer[]) one of { [98, 97, 114, 98, 97, 122, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [110, 117, 108, 108, 102, 111, 111, 110, 117, 108, 108, 98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })
(orig(chars) == null)  ==>  (orig(this.buffer[post(this.size)-1]) one of { 0, 122 })
(orig(chars) == null)  ==>  (orig(this.buffer[this.size]) one of { 0, 98 })
(orig(chars) == null)  ==>  (orig(this.size) one of { 6, 17 })
(orig(chars) == null)  ==>  (this.buffer[] one of { [98, 97, 114, 98, 97, 122, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [110, 117, 108, 108, 110, 117, 108, 108, 102, 111, 111, 110, 117, 108, 108, 98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })
(orig(chars) == null)  ==>  (this.buffer[orig(index)] one of { 98, 110 })
(orig(chars) == null)  ==>  (this.buffer[orig(offset)] one of { 98, 110 })
(orig(chars) == null)  ==>  (this.buffer[orig(this.size)-1] one of { 97, 122 })
(orig(chars) == null)  ==>  (this.buffer[orig(this.size)] one of { 98, 114 })
(orig(chars) == null)  ==>  (this.buffer[this.size] == orig(this.buffer[this.size]))
(orig(chars) == null)  ==>  (this.nullText.toString == "null")
(orig(chars) == null)  ==>  (this.size one of { 6, 21 })
this.buffer[] one of { [98, 97, 114, 98, 97, 122, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [110, 117, 108, 108, 110, 117, 108, 108, 102, 111, 111, 110, 117, 108, 108, 98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
this.size one of { 6, 9, 21 }
this.newLine == null
this.nullText.toString == "null"
chars[] one of { [], [97, 98, 99, 102, 111, 111, 100, 101, 102] }
orig(index) == 0
this.buffer[this.size] one of { 0, 98 }
this.buffer[this.size-1] == 122
this.buffer[orig(this.size)] one of { 98, 114 }
this.buffer[orig(this.size)-1] one of { 97, 114, 122 }
this.buffer[orig(index)] one of { 98, 102, 110 }
this.buffer[orig(offset)] one of { 98, 110 }
orig(this.buffer[post(this.size)-1]) one of { 0, 122 }
orig(this.buffer[post(this.size)-1]) in this.buffer[]
orig(this.buffer[this.size]) in this.buffer[]
this.buffer[orig(this.size)] in orig(this.buffer[])
this.buffer[orig(this.size)-1] in orig(this.buffer[])
this.buffer[this.size] % this.buffer[orig(index)] == 0
===========================================================================
org.apache.commons.lang.text.StrBuilder.insert(int, double):::ENTER
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[])
this.newLine == this.nullText
index == this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
this.buffer[this.size] == this.buffer[index]
this has only one value
this.buffer has only one value
this.buffer[] == [98, 97, 114, 98, 97, 122, 98, 97, 122, 98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
this.size == 6
this.newLine == null
value == 4.5
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == 0
this.buffer[this.size] == 98
this.buffer[this.size-1] == 122
===========================================================================
org.apache.commons.lang.text.StrBuilder.insert(int, double):::EXIT
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[])
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(return.buffer[])
this.buffer == return.buffer
this.buffer == orig(this.buffer)
this.buffer[] == return.buffer[]
this.size == return.size
this.newLine == this.nullText
this.newLine == return.newLine
this.newLine == return.nullText
this.newLine == orig(this.newLine)
this.newLine == orig(this.nullText)
return == orig(this)
orig(index) == this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
orig(index) == return.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
this.buffer[this.size] == this.buffer[orig(this.size)]
this.buffer[this.size] == orig(this.buffer[post(this.size)])
this.buffer[this.size] == orig(this.buffer[post(index)])
this.buffer[this.size] == return.buffer[orig(this.size)]
this.buffer[this.size] == orig(this.buffer[post(return.size)])
this.buffer[this.size] == orig(this.buffer[this.size])
this.buffer[this.size] == orig(this.buffer[index])
this.buffer[this.size-1] == orig(this.buffer[post(this.size)-1])
this.buffer[this.size-1] == orig(this.buffer[post(return.size)-1])
this.buffer[this.size-1] == orig(this.buffer[this.size-1])
this.buffer has only one value
this.buffer[] == [52, 46, 53, 98, 97, 114, 98, 97, 122, 98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
this.size == 9
this.newLine == null
return has only one value
orig(index) == 0
this.buffer[this.size] == 98
this.buffer[this.size-1] == 122
this.buffer[orig(this.size)-1] == 114
this.buffer[orig(index)] == 52
this.buffer[orig(this.size)-1] in orig(this.buffer[])
===========================================================================
org.apache.commons.lang.text.StrBuilder.insert(int, float):::ENTER
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[])
this.newLine == this.nullText
index == this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
this.buffer[this.size] == this.buffer[this.size-1]
this has only one value
this.buffer has only one value
this.buffer[] == [98, 97, 114, 98, 97, 122, 122, 117, 101, 98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
this.size == 6
this.newLine == null
value == 2.3
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == 0
this.buffer[this.size] == 122
this.buffer[index] == 98
===========================================================================
org.apache.commons.lang.text.StrBuilder.insert(int, float):::EXIT
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[])
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(return.buffer[])
this.buffer == return.buffer
this.buffer == orig(this.buffer)
this.buffer[] == return.buffer[]
this.size == return.size
this.newLine == this.nullText
this.newLine == return.newLine
this.newLine == return.nullText
this.newLine == orig(this.newLine)
this.newLine == orig(this.nullText)
return == orig(this)
orig(index) == this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
orig(index) == return.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
this.buffer[this.size] == this.buffer[orig(this.size)]
this.buffer[this.size] == orig(this.buffer[post(this.size)])
this.buffer[this.size] == orig(this.buffer[post(index)])
this.buffer[this.size] == return.buffer[orig(this.size)]
this.buffer[this.size] == orig(this.buffer[post(return.size)])
this.buffer[this.size] == orig(this.buffer[index])
this.buffer[this.size-1] == orig(this.buffer[this.size])
this.buffer[this.size-1] == orig(this.buffer[this.size-1])
this.buffer has only one value
this.buffer[] == [50, 46, 51, 98, 97, 114, 98, 97, 122, 98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
this.size == 9
this.newLine == null
return has only one value
orig(index) == 0
this.buffer[this.size] == 98
this.buffer[this.size-1] == 122
this.buffer[orig(this.size)-1] == 114
this.buffer[orig(index)] == 50
orig(this.buffer[post(this.size)-1]) == 101
this.buffer[orig(this.size)-1] in orig(this.buffer[])
===========================================================================
org.apache.commons.lang.text.StrBuilder.insert(int, java.lang.Object):::ENTER
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[])
index == this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == this.buffer[this.size]
this.buffer[] one of { [98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [110, 117, 108, 108, 98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
this.size one of { 6, 10 }
this.newLine == null
this.nullText.toString == "null"
obj.getClass().getName() == org.apache.commons.lang.text.StrBuilderAppendInsertTest$1.class
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == 0
this.buffer[this.size-1] == 122
this.buffer[index] one of { 98, 110 }
===========================================================================
org.apache.commons.lang.text.StrBuilder.insert(int, java.lang.Object):::EXIT925
this.newLine == orig(obj)
this.buffer[] one of { [98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [110, 117, 108, 108, 98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
this.size one of { 6, 10 }
orig(this.buffer[]) == [98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
orig(this.size) == 6
orig(obj) == null
this.buffer[orig(this.size)] one of { 0, 114 }
this.buffer[orig(this.size)-1] one of { 97, 122 }
this.buffer[orig(index)] one of { 98, 110 }
orig(this.buffer[index]) == 98
===========================================================================
org.apache.commons.lang.text.StrBuilder.insert(int, java.lang.Object):::EXIT927
orig(index) == orig(this.buffer[post(this.size)-1])
orig(index) == orig(this.buffer[post(return.size)-1])
this.buffer[] one of { [102, 111, 111, 98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 110, 117, 108, 108, 98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
this.size one of { 9, 13 }
orig(obj) has only one value
this.buffer[orig(this.size)] == 98
this.buffer[orig(this.size)-1] == 114
this.buffer[orig(index)] == 102
===========================================================================
org.apache.commons.lang.text.StrBuilder.insert(int, java.lang.Object):::EXIT
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[])
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(return.buffer[])
this.buffer == return.buffer
this.buffer == orig(this.buffer)
this.buffer[] == return.buffer[]
this.size == return.size
this.newLine == return.newLine
this.newLine == orig(this.newLine)
this.nullText == return.nullText
this.nullText == orig(this.nullText)
return == orig(this)
orig(index) == this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
orig(index) == return.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
orig(index) == this.buffer[this.size]
orig(index) == this.buffer[return.size]
orig(index) == return.buffer[this.size]
orig(index) == orig(this.buffer[post(this.size)])
orig(index) == return.buffer[return.size]
orig(index) == orig(this.buffer[post(return.size)])
orig(index) == orig(this.buffer[this.size])
this.buffer[this.size-1] == orig(this.buffer[this.size-1])
(this.buffer[] one of { [102, 111, 111, 98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 110, 117, 108, 108, 98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  <==>  (orig(obj) has only one value)
(this.buffer[] one of { [102, 111, 111, 98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 110, 117, 108, 108, 98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  <==>  (this.buffer[orig(index)] == 102)
(this.buffer[] one of { [102, 111, 111, 98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 110, 117, 108, 108, 98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  <==>  (this.buffer[orig(this.size)-1] == 114)
(this.buffer[] one of { [102, 111, 111, 98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 110, 117, 108, 108, 98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  <==>  (this.buffer[orig(this.size)] == 98)
(this.buffer[] one of { [102, 111, 111, 98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 110, 117, 108, 108, 98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  <==>  (this.size one of { 9, 13 })
(this.buffer[] one of { [102, 111, 111, 98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 110, 117, 108, 108, 98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (orig(index) == orig(this.buffer[post(this.size)-1]))
(this.buffer[] one of { [102, 111, 111, 98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 110, 117, 108, 108, 98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (orig(obj.getClass().getName()) == org.apache.commons.lang.text.StrBuilderAppendInsertTest$1.class)
(this.buffer[] one of { [102, 111, 111, 98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 110, 117, 108, 108, 98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (orig(this.buffer[]) one of { [98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [110, 117, 108, 108, 98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })
(this.buffer[] one of { [102, 111, 111, 98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 110, 117, 108, 108, 98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (orig(this.buffer[index]) one of { 98, 110 })
(this.buffer[] one of { [102, 111, 111, 98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 110, 117, 108, 108, 98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (orig(this.buffer[post(this.size)-1]) == 0)
(this.buffer[] one of { [102, 111, 111, 98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 110, 117, 108, 108, 98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (orig(this.size) one of { 6, 10 })
(this.buffer[] one of { [98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [110, 117, 108, 108, 98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  <==>  (orig(obj) == null)
(this.buffer[] one of { [98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [110, 117, 108, 108, 98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  <==>  (this.buffer[orig(index)] one of { 98, 110 })
(this.buffer[] one of { [98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [110, 117, 108, 108, 98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  <==>  (this.buffer[orig(this.size)-1] one of { 97, 122 })
(this.buffer[] one of { [98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [110, 117, 108, 108, 98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  <==>  (this.buffer[orig(this.size)] one of { 0, 114 })
(this.buffer[] one of { [98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [110, 117, 108, 108, 98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  <==>  (this.size one of { 6, 10 })
(this.buffer[] one of { [98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [110, 117, 108, 108, 98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (orig(this.buffer[]) == [98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
(this.buffer[] one of { [98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [110, 117, 108, 108, 98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (orig(this.buffer[index]) == 98)
(this.buffer[] one of { [98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [110, 117, 108, 108, 98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (orig(this.buffer[post(this.size)-1]) one of { 0, 122 })
(this.buffer[] one of { [98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [110, 117, 108, 108, 98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (orig(this.size) == 6)
(this.buffer[] one of { [98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [110, 117, 108, 108, 98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] })  ==>  (this.newLine == orig(obj))
this.newLine == null
this.nullText.toString == "null"
orig(index) == 0
this.buffer[this.size-1] == 122
this.buffer[orig(this.size)] one of { 0, 98, 114 }
this.buffer[orig(this.size)-1] one of { 97, 114, 122 }
this.buffer[orig(index)] one of { 98, 102, 110 }
orig(this.buffer[post(this.size)-1]) one of { 0, 122 }
orig(this.buffer[post(this.size)-1]) in this.buffer[]
orig(this.buffer[index]) in this.buffer[]
this.buffer[orig(this.size)] in orig(this.buffer[])
this.buffer[orig(this.size)-1] in orig(this.buffer[])
===========================================================================
org.apache.commons.lang.text.StrBuilder.insert(int, java.lang.String):::ENTER
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[])
index == this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
this.newLine == null
this.nullText.toString == "null"
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == 0
this.buffer[this.size-1] == 122
this.buffer[index] one of { 98, 102, 110 }
org.apache.commons.lang.text.StrBuilder.CAPACITY != this.buffer[this.size]
org.apache.commons.lang.text.StrBuilder.CAPACITY < this.buffer[index]
org.apache.commons.lang.text.StrBuilder.serialVersionUID > this.buffer[this.size]
org.apache.commons.lang.text.StrBuilder.serialVersionUID > this.buffer[index]
this.buffer[] elements >= this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
this.buffer[] elements <= this.buffer[this.size-1]
this.size < size(this.buffer[])-1
this.size > this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
this.size != this.buffer[this.size]
this.size < this.buffer[this.size-1]
this.size < this.buffer[index]
size(this.buffer[])-1 != this.buffer[this.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] <= this.buffer[this.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] < this.buffer[index]
this.buffer[this.size] <= this.buffer[this.size-1]
this.buffer[this.size-1] > this.buffer[index]
===========================================================================
org.apache.commons.lang.text.StrBuilder.insert(int, java.lang.String):::EXIT
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[])
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(return.buffer[])
this.buffer == return.buffer
this.buffer == orig(this.buffer)
this.buffer[] == return.buffer[]
this.size == return.size
this.newLine == return.newLine
this.newLine == orig(this.newLine)
this.nullText == return.nullText
this.nullText == orig(this.nullText)
this.nullText.toString == return.nullText.toString
this.nullText.toString == orig(this.nullText.toString)
return == orig(this)
orig(index) == this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
orig(index) == return.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
this.buffer[this.size] == orig(this.buffer[post(this.size)])
this.buffer[this.size] == orig(this.buffer[post(return.size)])
this.buffer[this.size-1] == orig(this.buffer[this.size-1])
this.newLine == null
this.nullText.toString == "null"
return != null
orig(index) == 0
this.buffer[this.size] one of { 0, 98, 117 }
this.buffer[this.size-1] == 122
this.buffer[orig(this.size)-1] one of { 97, 114, 122 }
org.apache.commons.lang.text.StrBuilder.CAPACITY != this.buffer[this.size]
org.apache.commons.lang.text.StrBuilder.CAPACITY != this.buffer[orig(this.size)]
org.apache.commons.lang.text.StrBuilder.CAPACITY < this.buffer[orig(this.size)-1]
org.apache.commons.lang.text.StrBuilder.CAPACITY < this.buffer[orig(index)]
org.apache.commons.lang.text.StrBuilder.CAPACITY != orig(this.buffer[post(this.size)-1])
org.apache.commons.lang.text.StrBuilder.serialVersionUID > this.buffer[this.size]
org.apache.commons.lang.text.StrBuilder.serialVersionUID > this.buffer[orig(this.size)]
org.apache.commons.lang.text.StrBuilder.serialVersionUID > this.buffer[orig(this.size)-1]
org.apache.commons.lang.text.StrBuilder.serialVersionUID > this.buffer[orig(index)]
org.apache.commons.lang.text.StrBuilder.serialVersionUID > orig(this.buffer[post(this.size)-1])
this.buffer[] elements >= orig(index)
this.buffer[] elements <= this.buffer[this.size-1]
orig(this.buffer[this.size]) in this.buffer[]
orig(this.buffer[index]) in this.buffer[]
this.size >= orig(this.size)
this.size > orig(index)
this.size < size(this.buffer[])-1
this.size != this.buffer[this.size]
this.size < this.buffer[this.size-1]
this.size != this.buffer[orig(this.size)]
this.size < this.buffer[orig(this.size)-1]
this.size < this.buffer[orig(index)]
this.size != orig(this.buffer[post(this.size)-1])
this.size != orig(this.buffer[this.size])
this.size < orig(this.buffer[index])
orig(this.buffer[]) elements >= orig(index)
orig(this.buffer[]) elements <= this.buffer[this.size-1]
this.buffer[orig(this.size)] in orig(this.buffer[])
this.buffer[orig(this.size)-1] in orig(this.buffer[])
orig(this.size) > orig(index)
orig(this.size) < size(this.buffer[])-1
orig(this.size) != this.buffer[this.size]
orig(this.size) < this.buffer[this.size-1]
orig(this.size) != this.buffer[orig(this.size)]
orig(this.size) < this.buffer[orig(this.size)-1]
orig(this.size) < this.buffer[orig(index)]
orig(this.size) != orig(this.buffer[post(this.size)-1])
orig(index) <= this.buffer[this.size]
orig(index) <= this.buffer[orig(this.size)]
orig(index) < this.buffer[orig(this.size)-1]
orig(index) < this.buffer[orig(index)]
orig(index) <= orig(this.buffer[post(this.size)-1])
orig(index) <= orig(this.buffer[this.size])
orig(index) < orig(this.buffer[index])
size(this.buffer[])-1 != this.buffer[this.size]
size(this.buffer[])-1 != this.buffer[orig(this.size)]
size(this.buffer[])-1 != orig(this.buffer[post(this.size)-1])
size(this.buffer[])-1 != orig(this.buffer[this.size])
this.buffer[this.size] < this.buffer[this.size-1]
this.buffer[this.size] <= this.buffer[orig(this.size)]
this.buffer[this.size] != this.buffer[orig(this.size)-1]
this.buffer[this.size] <= orig(this.buffer[post(this.size)-1])
this.buffer[this.size] <= orig(this.buffer[this.size])
this.buffer[this.size-1] >= this.buffer[orig(this.size)]
this.buffer[this.size-1] >= this.buffer[orig(this.size)-1]
this.buffer[this.size-1] > this.buffer[orig(index)]
this.buffer[this.size-1] >= orig(this.buffer[post(this.size)-1])
this.buffer[this.size-1] >= orig(this.buffer[this.size])
this.buffer[this.size-1] > orig(this.buffer[index])
this.buffer[orig(this.size)] != this.buffer[orig(this.size)-1]
this.buffer[orig(this.size)-1] != this.buffer[orig(index)]
this.buffer[orig(this.size)-1] != orig(this.buffer[this.size])
this.buffer[orig(this.size)-1] != orig(this.buffer[index])
this.buffer[orig(index)] != orig(this.buffer[post(this.size)-1])
orig(this.buffer[post(this.size)-1]) != orig(this.buffer[index])
===========================================================================
org.apache.commons.lang.text.StrBuilder.insert(int, long):::ENTER
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[])
this.newLine == this.nullText
index == this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
this.buffer[this.size] == this.buffer[this.size-1]
this.buffer[index] == this.buffer[value-1]
this has only one value
this.buffer has only one value
this.buffer[] == [98, 97, 114, 98, 97, 122, 122, 117, 101, 98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
this.size == 6
this.newLine == null
value == 1
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == 0
this.buffer[this.size] == 122
this.buffer[index] == 98
this.buffer[value] == 97
===========================================================================
org.apache.commons.lang.text.StrBuilder.insert(int, long):::EXIT
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[])
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(return.buffer[])
this.buffer == return.buffer
this.buffer == orig(this.buffer)
this.buffer[] == return.buffer[]
this.size == return.size
this.newLine == this.nullText
this.newLine == return.newLine
this.newLine == return.nullText
this.newLine == orig(this.newLine)
this.newLine == orig(this.nullText)
return == orig(this)
orig(index) == this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
orig(index) == return.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
this.buffer[this.size] == orig(this.buffer[post(this.size)])
this.buffer[this.size] == orig(this.buffer[post(return.size)])
this.buffer[this.size-1] == this.buffer[orig(this.size)]
this.buffer[this.size-1] == orig(this.buffer[post(this.size)-1])
this.buffer[this.size-1] == return.buffer[orig(this.size)]
this.buffer[this.size-1] == orig(this.buffer[post(return.size)-1])
this.buffer[this.size-1] == orig(this.buffer[this.size])
this.buffer[this.size-1] == orig(this.buffer[this.size-1])
this.buffer[orig(this.size)-1] == orig(this.buffer[value])
this.buffer[orig(index)] == this.buffer[orig(value)-1]
this.buffer[orig(index)] == return.buffer[orig(value)-1]
this.buffer[orig(value)] == orig(this.buffer[post(index)])
this.buffer[orig(value)] == orig(this.buffer[post(value)-1])
this.buffer[orig(value)] == orig(this.buffer[index])
this.buffer[orig(value)] == orig(this.buffer[value-1])
return.buffer[orig(this.size)-1] == orig(this.buffer[value])
this.buffer has only one value
this.buffer[] == [49, 98, 97, 114, 98, 97, 122, 117, 101, 98, 97, 114, 98, 97, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
this.size == 7
this.newLine == null
return has only one value
orig(index) == 0
this.buffer[this.size] == 117
this.buffer[this.size-1] == 122
this.buffer[orig(index)] == 49
this.buffer[orig(value)] == 98
===========================================================================
org.apache.commons.lang.text.StrBuilder.length():::ENTER
size(this.buffer[]) one of { 32, 35, 41 }
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == 0
org.apache.commons.lang.text.StrBuilder.CAPACITY <= size(this.buffer[])
org.apache.commons.lang.text.StrBuilder.CAPACITY != this.buffer[this.size]
org.apache.commons.lang.text.StrBuilder.serialVersionUID > this.buffer[this.size]
this.buffer[] elements >= this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
this.size < size(this.buffer[])-1
this.size >= this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
size(this.buffer[]) != this.buffer[this.size]
size(this.buffer[])-1 > this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
size(this.buffer[])-1 != this.buffer[this.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] <= this.buffer[this.size]
===========================================================================
org.apache.commons.lang.text.StrBuilder.length():::EXIT
this.buffer == orig(this.buffer)
this.buffer[] == orig(this.buffer[])
this.size == return
this.newLine == orig(this.newLine)
this.newLine.toString == orig(this.newLine.toString)
this.nullText == orig(this.nullText)
this.nullText.toString == orig(this.nullText.toString)
return == orig(this.size)
return >= 0
size(this.buffer[]) one of { 32, 35, 41 }
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == 0
org.apache.commons.lang.text.StrBuilder.CAPACITY > return
org.apache.commons.lang.text.StrBuilder.CAPACITY <= size(this.buffer[])
org.apache.commons.lang.text.StrBuilder.CAPACITY != this.buffer[return]
org.apache.commons.lang.text.StrBuilder.serialVersionUID > return
org.apache.commons.lang.text.StrBuilder.serialVersionUID > this.buffer[return]
this.buffer[] elements >= this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
return < size(this.buffer[])-1
return >= this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
size(this.buffer[]) != this.buffer[return]
size(this.buffer[])-1 > this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
size(this.buffer[])-1 != this.buffer[return]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] <= this.buffer[return]
===========================================================================
org.apache.commons.lang.text.StrBuilder.setNewLineText(java.lang.String):::ENTER
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == this.buffer[this.size]
this has only one value
this.buffer has only one value
this.buffer[] elements one of { 0, 35, 45 }
this.buffer[] one of { [45, 45, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [45, 45, 45, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
this.size one of { 3, 4 }
this.nullText == null
newLine.toString == "#"
size(this.buffer[]) == 35
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == 0
this.buffer[this.size-1] one of { 35, 45 }
===========================================================================
org.apache.commons.lang.text.StrBuilder.setNewLineText(java.lang.String):::EXIT
this.buffer == return.buffer
this.buffer == orig(this.buffer)
this.buffer[] == return.buffer[]
this.buffer[] == orig(this.buffer[])
this.size == return.size
this.size == orig(this.size)
this.newLine == return.newLine
this.newLine == orig(newLine)
this.newLine.toString == newLine.toString
this.nullText == return.nullText
this.nullText == orig(this.nullText)
newLine.toString == return.newLine.toString
newLine.toString == orig(newLine.toString)
return == orig(this)
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == return.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == orig(this.buffer[post(org.apache.commons.lang.text.StrBuilder.CAPACITY)-1])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == this.buffer[this.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == this.buffer[return.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == this.buffer[orig(this.size)]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == return.buffer[this.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == orig(this.buffer[post(this.size)])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == return.buffer[return.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == return.buffer[orig(this.size)]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == orig(this.buffer[post(return.size)])
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == orig(this.buffer[this.size])
this.buffer has only one value
this.buffer[] elements one of { 0, 35, 45 }
this.buffer[] one of { [45, 45, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [45, 45, 45, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
this.size one of { 3, 4 }
this.nullText == null
newLine.toString == "#"
return has only one value
size(this.buffer[]) == 35
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY] == 0
this.buffer[this.size-1] one of { 35, 45 }
===========================================================================
org.apache.commons.lang.text.StrBuilder.setNullText(java.lang.String):::ENTER
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[])
this.size == this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
this.newLine == this.nullText
this.buffer[] one of { [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [45, 45, 45, 45, 45, 45, 45, 102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 45, 45, 45, 45, 45, 45, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
this.size == 0
this.newLine == null
nullText != null
nullText.toString one of { "NULL", "null" }
this.buffer[this.size] one of { 0, 45, 102 }
org.apache.commons.lang.text.StrBuilder.CAPACITY != this.buffer[this.size]
org.apache.commons.lang.text.StrBuilder.serialVersionUID > this.buffer[this.size]
this.buffer[] elements >= this.size
this.size <= this.buffer[this.size]
size(this.buffer[])-1 != this.buffer[this.size]
===========================================================================
org.apache.commons.lang.text.StrBuilder.setNullText(java.lang.String):::EXIT
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[])
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(return.buffer[])
this.buffer == return.buffer
this.buffer == orig(this.buffer)
this.buffer[] == return.buffer[]
this.buffer[] == orig(this.buffer[])
this.size == return.size
this.size == orig(this.size)
this.size == this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
this.size == return.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
this.size == orig(this.buffer[post(org.apache.commons.lang.text.StrBuilder.CAPACITY)-1])
this.newLine == return.newLine
this.newLine == orig(this.newLine)
this.newLine == orig(this.nullText)
this.nullText == return.nullText
this.nullText == orig(nullText)
this.nullText.toString == nullText.toString
nullText.toString == return.nullText.toString
nullText.toString == orig(nullText.toString)
return == orig(this)
this.buffer[] one of { [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [45, 45, 45, 45, 45, 45, 45, 102, 111, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [102, 111, 111, 45, 45, 45, 45, 45, 45, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
this.size == 0
this.newLine == null
this.nullText != null
nullText.toString one of { "NULL", "null" }
return != null
this.buffer[this.size] one of { 0, 45, 102 }
org.apache.commons.lang.text.StrBuilder.CAPACITY != this.buffer[this.size]
org.apache.commons.lang.text.StrBuilder.serialVersionUID > this.buffer[this.size]
this.buffer[] elements >= this.size
this.size <= this.buffer[this.size]
size(this.buffer[])-1 != this.buffer[this.size]
===========================================================================
org.apache.commons.lang.text.StrBuilder.toString():::ENTER
this.newLine == null
size(this.buffer[]) one of { 1, 32, 35 }
this.size != size(this.buffer[])-1
===========================================================================
org.apache.commons.lang.text.StrBuilder.toString():::EXIT
this.buffer == orig(this.buffer)
this.buffer[] == orig(this.buffer[])
this.size == orig(this.size)
this.newLine == orig(this.newLine)
this.nullText == orig(this.nullText)
this.nullText.toString == orig(this.nullText.toString)
this.newLine == null
return != null
size(this.buffer[]) one of { 1, 32, 35 }
this.size != size(this.buffer[])-1
===========================================================================
org.apache.commons.lang.text.StrBuilder.validateIndex(int):::ENTER
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[])
index == this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
this.newLine == null
this.nullText.toString == "null"
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] == 0
this.buffer[this.size-1] == 122
org.apache.commons.lang.text.StrBuilder.CAPACITY != this.buffer[this.size]
org.apache.commons.lang.text.StrBuilder.CAPACITY < this.buffer[index]
org.apache.commons.lang.text.StrBuilder.serialVersionUID > this.buffer[this.size]
org.apache.commons.lang.text.StrBuilder.serialVersionUID > this.buffer[index]
this.buffer[] elements >= this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
this.buffer[] elements <= this.buffer[this.size-1]
this.size < size(this.buffer[])-1
this.size > this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
this.size != this.buffer[this.size]
this.size < this.buffer[this.size-1]
this.size < this.buffer[index]
size(this.buffer[])-1 != this.buffer[this.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] <= this.buffer[this.size]
this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1] < this.buffer[index]
this.buffer[this.size] <= this.buffer[this.size-1]
this.buffer[this.size-1] > this.buffer[index]
===========================================================================
org.apache.commons.lang.text.StrBuilder.validateIndex(int):::EXIT
org.apache.commons.lang.text.StrBuilder.CAPACITY == size(this.buffer[])
this.buffer == orig(this.buffer)
this.buffer[] == orig(this.buffer[])
this.size == orig(this.size)
this.newLine == orig(this.newLine)
this.nullText == orig(this.nullText)
this.nullText.toString == orig(this.nullText.toString)
orig(index) == this.buffer[org.apache.commons.lang.text.StrBuilder.CAPACITY-1]
this.newLine == null
this.nullText.toString == "null"
orig(index) == 0
this.buffer[this.size-1] == 122
org.apache.commons.lang.text.StrBuilder.CAPACITY != this.buffer[this.size]
org.apache.commons.lang.text.StrBuilder.CAPACITY < this.buffer[orig(index)]
org.apache.commons.lang.text.StrBuilder.serialVersionUID > this.buffer[this.size]
org.apache.commons.lang.text.StrBuilder.serialVersionUID > this.buffer[orig(index)]
this.buffer[] elements >= orig(index)
this.buffer[] elements <= this.buffer[this.size-1]
this.size > orig(index)
this.size < size(this.buffer[])-1
this.size != this.buffer[this.size]
this.size < this.buffer[this.size-1]
this.size < this.buffer[orig(index)]
orig(index) <= this.buffer[this.size]
orig(index) < this.buffer[orig(index)]
size(this.buffer[])-1 != this.buffer[this.size]
this.buffer[this.size] <= this.buffer[this.size-1]
this.buffer[this.size-1] > this.buffer[orig(index)]
===========================================================================
org.apache.commons.lang.text.StrBuilderAppendInsertTest$1:::OBJECT
this has only one value
===========================================================================
org.apache.commons.lang.text.StrBuilderAppendInsertTest$1.():::EXIT
===========================================================================
org.apache.commons.lang.text.StrBuilderAppendInsertTest$1.toString():::ENTER
===========================================================================
org.apache.commons.lang.text.StrBuilderAppendInsertTest$1.toString():::EXIT
return has only one value
return.toString == "foo"
===========================================================================
org.apache.commons.lang.text.StrBuilderAppendInsertTest:::CLASS
org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO has only one value
org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO != null
org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO.getClass().getName() == org.apache.commons.lang.text.StrBuilderAppendInsertTest$1.class
===========================================================================
org.apache.commons.lang.text.StrBuilderAppendInsertTest:::OBJECT
===========================================================================
org.apache.commons.lang.text.StrBuilderAppendInsertTest.StrBuilderAppendInsertTest(java.lang.String):::ENTER
name != null
===========================================================================
org.apache.commons.lang.text.StrBuilderAppendInsertTest.StrBuilderAppendInsertTest(java.lang.String):::EXIT
name.toString == orig(name.toString)
===========================================================================
org.apache.commons.lang.text.StrBuilderAppendInsertTest.suite():::ENTER
===========================================================================
org.apache.commons.lang.text.StrBuilderAppendInsertTest.suite():::EXIT
org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO == orig(org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO)
org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO.getClass().getName() == orig(org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO.getClass().getName())
return has only one value
return.getClass().getName() == junit.framework.TestSuite.class
===========================================================================
org.apache.commons.lang.text.StrBuilderAppendInsertTest.testAppendFixedWidthPadLeft():::ENTER
this has only one value
===========================================================================
org.apache.commons.lang.text.StrBuilderAppendInsertTest.testAppendFixedWidthPadLeft():::EXIT
org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO == orig(org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO)
org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO.getClass().getName() == orig(org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO.getClass().getName())
===========================================================================
org.apache.commons.lang.text.StrBuilderAppendInsertTest.testAppendFixedWidthPadLeft_int():::ENTER
this has only one value
===========================================================================
org.apache.commons.lang.text.StrBuilderAppendInsertTest.testAppendFixedWidthPadLeft_int():::EXIT
org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO == orig(org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO)
org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO.getClass().getName() == orig(org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO.getClass().getName())
===========================================================================
org.apache.commons.lang.text.StrBuilderAppendInsertTest.testAppendFixedWidthPadRight():::ENTER
this has only one value
===========================================================================
org.apache.commons.lang.text.StrBuilderAppendInsertTest.testAppendFixedWidthPadRight():::EXIT
org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO == orig(org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO)
org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO.getClass().getName() == orig(org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO.getClass().getName())
===========================================================================
org.apache.commons.lang.text.StrBuilderAppendInsertTest.testAppendFixedWidthPadRight_int():::ENTER
this has only one value
===========================================================================
org.apache.commons.lang.text.StrBuilderAppendInsertTest.testAppendFixedWidthPadRight_int():::EXIT
org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO == orig(org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO)
org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO.getClass().getName() == orig(org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO.getClass().getName())
===========================================================================
org.apache.commons.lang.text.StrBuilderAppendInsertTest.testAppendNewLine():::ENTER
this has only one value
===========================================================================
org.apache.commons.lang.text.StrBuilderAppendInsertTest.testAppendNewLine():::EXIT
org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO == orig(org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO)
org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO.getClass().getName() == orig(org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO.getClass().getName())
===========================================================================
org.apache.commons.lang.text.StrBuilderAppendInsertTest.testAppendPadding():::ENTER
this has only one value
===========================================================================
org.apache.commons.lang.text.StrBuilderAppendInsertTest.testAppendPadding():::EXIT
org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO == orig(org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO)
org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO.getClass().getName() == orig(org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO.getClass().getName())
===========================================================================
org.apache.commons.lang.text.StrBuilderAppendInsertTest.testAppendWithNullText():::ENTER
this has only one value
===========================================================================
org.apache.commons.lang.text.StrBuilderAppendInsertTest.testAppendWithNullText():::EXIT
org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO == orig(org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO)
org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO.getClass().getName() == orig(org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO.getClass().getName())
===========================================================================
org.apache.commons.lang.text.StrBuilderAppendInsertTest.testAppendWithSeparatorsWithNullText():::ENTER
this has only one value
===========================================================================
org.apache.commons.lang.text.StrBuilderAppendInsertTest.testAppendWithSeparatorsWithNullText():::EXIT
org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO == orig(org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO)
org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO.getClass().getName() == orig(org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO.getClass().getName())
===========================================================================
org.apache.commons.lang.text.StrBuilderAppendInsertTest.testAppendWithSeparators_Array():::ENTER
this has only one value
===========================================================================
org.apache.commons.lang.text.StrBuilderAppendInsertTest.testAppendWithSeparators_Array():::EXIT
org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO == orig(org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO)
org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO.getClass().getName() == orig(org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO.getClass().getName())
===========================================================================
org.apache.commons.lang.text.StrBuilderAppendInsertTest.testAppendWithSeparators_Collection():::ENTER
this has only one value
===========================================================================
org.apache.commons.lang.text.StrBuilderAppendInsertTest.testAppendWithSeparators_Collection():::EXIT
org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO == orig(org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO)
org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO.getClass().getName() == orig(org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO.getClass().getName())
===========================================================================
org.apache.commons.lang.text.StrBuilderAppendInsertTest.testAppendWithSeparators_Iterator():::ENTER
this has only one value
===========================================================================
org.apache.commons.lang.text.StrBuilderAppendInsertTest.testAppendWithSeparators_Iterator():::EXIT
org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO == orig(org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO)
org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO.getClass().getName() == orig(org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO.getClass().getName())
===========================================================================
org.apache.commons.lang.text.StrBuilderAppendInsertTest.testAppend_CharArray():::ENTER
this has only one value
===========================================================================
org.apache.commons.lang.text.StrBuilderAppendInsertTest.testAppend_CharArray():::EXIT
org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO == orig(org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO)
org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO.getClass().getName() == orig(org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO.getClass().getName())
===========================================================================
org.apache.commons.lang.text.StrBuilderAppendInsertTest.testAppend_CharArray_int_int():::ENTER
this has only one value
===========================================================================
org.apache.commons.lang.text.StrBuilderAppendInsertTest.testAppend_CharArray_int_int():::EXIT
org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO == orig(org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO)
org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO.getClass().getName() == orig(org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO.getClass().getName())
===========================================================================
org.apache.commons.lang.text.StrBuilderAppendInsertTest.testAppend_Object():::ENTER
this has only one value
===========================================================================
org.apache.commons.lang.text.StrBuilderAppendInsertTest.testAppend_Object():::EXIT
org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO == orig(org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO)
org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO.getClass().getName() == orig(org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO.getClass().getName())
===========================================================================
org.apache.commons.lang.text.StrBuilderAppendInsertTest.testAppend_Primitive():::ENTER
this has only one value
===========================================================================
org.apache.commons.lang.text.StrBuilderAppendInsertTest.testAppend_Primitive():::EXIT
org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO == orig(org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO)
org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO.getClass().getName() == orig(org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO.getClass().getName())
===========================================================================
org.apache.commons.lang.text.StrBuilderAppendInsertTest.testAppend_PrimitiveNumber():::ENTER
this has only one value
===========================================================================
org.apache.commons.lang.text.StrBuilderAppendInsertTest.testAppend_PrimitiveNumber():::EXIT
org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO == orig(org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO)
org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO.getClass().getName() == orig(org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO.getClass().getName())
===========================================================================
org.apache.commons.lang.text.StrBuilderAppendInsertTest.testAppend_StrBuilder():::ENTER
this has only one value
===========================================================================
org.apache.commons.lang.text.StrBuilderAppendInsertTest.testAppend_StrBuilder():::EXIT
org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO == orig(org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO)
org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO.getClass().getName() == orig(org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO.getClass().getName())
===========================================================================
org.apache.commons.lang.text.StrBuilderAppendInsertTest.testAppend_StrBuilder_int_int():::ENTER
this has only one value
===========================================================================
org.apache.commons.lang.text.StrBuilderAppendInsertTest.testAppend_StrBuilder_int_int():::EXIT
org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO == orig(org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO)
org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO.getClass().getName() == orig(org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO.getClass().getName())
===========================================================================
org.apache.commons.lang.text.StrBuilderAppendInsertTest.testAppend_String():::ENTER
this has only one value
===========================================================================
org.apache.commons.lang.text.StrBuilderAppendInsertTest.testAppend_String():::EXIT
org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO == orig(org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO)
org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO.getClass().getName() == orig(org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO.getClass().getName())
===========================================================================
org.apache.commons.lang.text.StrBuilderAppendInsertTest.testAppend_StringBuffer():::ENTER
this has only one value
===========================================================================
org.apache.commons.lang.text.StrBuilderAppendInsertTest.testAppend_StringBuffer():::EXIT
org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO == orig(org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO)
org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO.getClass().getName() == orig(org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO.getClass().getName())
===========================================================================
org.apache.commons.lang.text.StrBuilderAppendInsertTest.testAppend_StringBuffer_int_int():::ENTER
this has only one value
===========================================================================
org.apache.commons.lang.text.StrBuilderAppendInsertTest.testAppend_StringBuffer_int_int():::EXIT
org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO == orig(org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO)
org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO.getClass().getName() == orig(org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO.getClass().getName())
===========================================================================
org.apache.commons.lang.text.StrBuilderAppendInsertTest.testAppend_String_int_int():::ENTER
this has only one value
===========================================================================
org.apache.commons.lang.text.StrBuilderAppendInsertTest.testAppend_String_int_int():::EXIT
org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO == orig(org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO)
org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO.getClass().getName() == orig(org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO.getClass().getName())
===========================================================================
org.apache.commons.lang.text.StrBuilderAppendInsertTest.testInsert():::ENTER
this has only one value
===========================================================================
org.apache.commons.lang.text.StrBuilderAppendInsertTest.testInsert():::EXIT
org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO == orig(org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO)
org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO.getClass().getName() == orig(org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO.getClass().getName())
===========================================================================
org.apache.commons.lang.text.StrBuilderAppendInsertTest.testInsertWithNullText():::ENTER
this has only one value
===========================================================================
org.apache.commons.lang.text.StrBuilderAppendInsertTest.testInsertWithNullText():::EXIT
org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO == orig(org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO)
org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO.getClass().getName() == orig(org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO.getClass().getName())
===========================================================================
org.apache.commons.lang.text.StrBuilderAppendInsertTest.testLang299():::ENTER
this has only one value
===========================================================================
org.apache.commons.lang.text.StrBuilderAppendInsertTest.testLang299():::EXIT
org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO == orig(org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO)
org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO.getClass().getName() == orig(org.apache.commons.lang.text.StrBuilderAppendInsertTest.FOO.getClass().getName())
Exiting Daikon.
